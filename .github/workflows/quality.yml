name: Monorepo pipeline - quality

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  # See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-using-a-fallback-value
  group: pullrequest-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    env:
      CHUNK_SIZE: 7
    outputs:
      # TEST_CHUNKS: ${{ steps.test_projects.outputs.CHUNKS }}
      # LINT_CHUNKS: ${{ steps.lint_projects.outputs.CHUNKS }}
      # UNAFFECTED: ${{ steps.unaffected.outputs.UNAFFECTED }}
      # BUILD_CHUNKS: ${{ steps.build_projects.outputs.CHUNKS }}
      # BUILD_MAP: ${{ steps.build_map.outputs.BUILD_MAP }}
      node-modules-hash: ${{ steps.calculate_node_modules_hash.outputs.node-modules-hash }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'

      - name: Check node version
        run: |
          node -v
          ls -l `which node`

      - name: Setup yarn
        run: |
          sudo npm i -g corepack
          corepack prepare yarn@4.0.2 --activate

      - name: Calculate cache key for node_modules
        id: calculate_node_modules_hash
        run: |
          PACKAGE_JSON_HASH=$(cat package.json | jq '{resolutions,dependencies,devDependencies}' | sha1sum -t | cut -f1 -d" ")
          echo "PACKAGE_JSON_HASH: $PACKAGE_JSON_HASH"
          export NODE_MODULES_HASH=${{ runner.os }}-${{ hashFiles('yarn.lock') }}-$PACKAGE_JSON_HASH
          echo "NODE_MODULES_HASH: $NODE_MODULES_HASH"
          echo "node-modules-hash=$NODE_MODULES_HASH" >> $GITHUB_OUTPUT

      - name: Cache for NodeJS dependencies - host OS
        id: node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ steps.calculate_node_modules_hash.outputs.node-modules-hash }}-yarn

      - name: Building NodeJS dependencies
        if: steps.node-modules.outputs.cache-hit != 'true'
        run: yarn install --immutable

  linting:
    needs:
      - prepare
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'

      - name: Setup yarn
        run: |
          sudo npm i -g corepack
          corepack prepare yarn@4.0.2 --activate

      - name: Cache for NodeJS dependencies - host OS
        id: node-modules
        continue-on-error: true
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.prepare.outputs.node-modules-hash }}-yarn

      - name: Linting
        run: yarn run nx run-many -t lint

  formatting:
    needs:
      - prepare
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'

      - name: Setup yarn
        run: |
          sudo npm i -g corepack
          corepack prepare yarn@4.0.2 --activate

      - name: Cache for NodeJS dependencies - host OS
        id: node-modules
        continue-on-error: true
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.prepare.outputs.node-modules-hash }}-yarn

      - name: Check formatting
        run: yarn nx format:write --all

  testing:
    needs:
      - prepare
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'

      - name: Setup yarn
        run: |
          sudo npm i -g corepack
          corepack prepare yarn@4.0.2 --activate

      - name: Cache for NodeJS dependencies - host OS
        id: node-modules
        continue-on-error: true
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.prepare.outputs.node-modules-hash }}-yarn

      - name: Run tests
        run: yarn run nx run-many -t test

  build:
    needs:
      - prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'

      - name: Setup yarn
        run: |
          sudo npm i -g corepack
          corepack prepare yarn@4.0.2 --activate

      - name: Cache for NodeJS dependencies - host OS
        id: node-modules
        continue-on-error: true
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.prepare.outputs.node-modules-hash }}-yarn

      - name: Build application
        run: yarn nx run official-journal-web:build:production
