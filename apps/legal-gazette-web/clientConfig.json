{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/types/slug/{slug}": {
      "get": {
        "operationId": "getTypeBySlug",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TypeModel" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["Type"]
      }
    },
    "/api/v1/types/common": {
      "get": {
        "operationId": "getCommonAdvertTypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetTypesDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["Type"]
      }
    },
    "/api/v1/types/{id}": {
      "get": {
        "operationId": "getType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TypeModel" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["Type"]
      }
    },
    "/api/v1/types": {
      "get": {
        "operationId": "getTypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetTypesDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["Type"]
      }
    },
    "/api/v1/categories/slug/{slug}": {
      "get": {
        "operationId": "getCategoryBySlug",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CategoryDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["Category"]
      }
    },
    "/api/v1/categories/{id}": {
      "get": {
        "operationId": "getCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CategoryDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["Category"]
      }
    },
    "/api/v1/categories": {
      "get": {
        "operationId": "getCategories",
        "parameters": [
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": { "nullable": true, "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetCategoriesDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["Category"]
      }
    },
    "/api/v1/statuses": {
      "get": {
        "operationId": "getStatuses",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetStatusesDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["Status"]
      }
    },
    "/api/v1/statuses/{id}": {
      "get": {
        "operationId": "getStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StatusDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["Status"]
      }
    },
    "/api/v1/statuses/slug/{slug}": {
      "get": {
        "operationId": "getStatusBySlug",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StatusDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["Status"]
      }
    },
    "/api/v1/court-districts": {
      "get": {
        "operationId": "getCourtDistricts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCourtDistrictsDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["CourtDistrict"]
      }
    },
    "/api/v1/court-districts/{id}": {
      "get": {
        "operationId": "getCourtDistrictById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CourtDistrictDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["CourtDistrict"]
      }
    },
    "/api/v1/court-districts/slug/{slug}": {
      "get": {
        "operationId": "getCourtDistrictBySlug",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CourtDistrictDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["CourtDistrict"]
      }
    },
    "/api/v1/external/companies/hlutafelag": {
      "post": {
        "description": "Register a new company (Hlutafélag nýskráning)",
        "operationId": "registerHlutafelag",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCompanyHlutafelagDto"
              }
            }
          }
        },
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Company"]
      }
    },
    "/api/v1/external/companies/firmaskra": {
      "post": {
        "description": "Register a new company from (Firmaskrá - Fyrirtækjaskrá)",
        "operationId": "registerFirmaskra",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCompanyFirmaskraDto"
              }
            }
          }
        },
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Company"]
      }
    },
    "/api/v1/external/companies/aukatilkynningar": {
      "post": {
        "operationId": "createAdditionalAnnouncements",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdditionalAnnouncementsDto"
              }
            }
          }
        },
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Company"]
      }
    },
    "/api/v1/cases": {
      "get": {
        "operationId": "getCases",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "default": 1, "example": 1, "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": { "default": 10, "example": 10, "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetCasesDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Case"]
      },
      "post": {
        "operationId": "createCase",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CaseDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Case"]
      }
    },
    "/api/v1/cases/{id}/restore": {
      "post": {
        "operationId": "restore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CaseDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Case"]
      }
    },
    "/api/v1/cases/{id}": {
      "delete": {
        "operationId": "deleteCase",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Case"]
      }
    },
    "/api/v1/adverts/{id}/assign/{userId}": {
      "post": {
        "operationId": "assignAdvertToEmployee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["AdvertUpdate"]
      }
    },
    "/api/v1/adverts/{id}/ready": {
      "post": {
        "operationId": "markAdvertAsReady",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["AdvertUpdate"]
      }
    },
    "/api/v1/adverts/{id}/submit": {
      "post": {
        "operationId": "markAdvertAsSubmitted",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["AdvertUpdate"]
      }
    },
    "/api/v1/adverts/{id}/category/{categoryId}": {
      "patch": {
        "operationId": "updateAdvertCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "categoryId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["AdvertUpdate"]
      }
    },
    "/api/v1/adverts/{id}/status/{statusId}": {
      "patch": {
        "operationId": "updateAdvertStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "statusId",
            "required": true,
            "in": "path",
            "schema": { "$ref": "#/components/schemas/StatusIdEnum" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["AdvertUpdate"]
      }
    },
    "/api/v1/adverts/{id}": {
      "patch": {
        "operationId": "updateAdvert",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateAdvertDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertDetailedDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["AdvertUpdate"]
      },
      "get": {
        "operationId": "getAdvertById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertDetailedDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Advert"]
      }
    },
    "/api/v1/adverts/pdf/{id}": {
      "get": {
        "operationId": "getAdvertPdf",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the generated pdf as a binary.",
            "content": {
              "application/pdf": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["AdvertPdf"]
      }
    },
    "/api/v1/adverts/count": {
      "get": {
        "operationId": "getAdvertsCount",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdvertsStatusCounterDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Advert"]
      }
    },
    "/api/v1/adverts": {
      "get": {
        "operationId": "getAdverts",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "default": 1, "example": 1, "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": { "default": 10, "example": 10, "type": "number" }
          },
          {
            "name": "categoryId",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "statusId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/StatusIdEnum" }
            }
          },
          {
            "name": "typeId",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "dateFrom",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "dateTo",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertsDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Advert"]
      }
    },
    "/api/v1/adverts/byCaseId/{caseId}": {
      "get": {
        "operationId": "getAdvertsByCaseId",
        "parameters": [
          {
            "name": "caseId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertsDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Advert"]
      }
    },
    "/api/v1/adverts/publish": {
      "post": {
        "operationId": "publishAdverts",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PublishAdvertsBody" }
            }
          }
        },
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["AdvertPublish"]
      }
    },
    "/api/v1/adverts/{id}/publish": {
      "post": {
        "operationId": "publishAdvert",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["AdvertPublish"]
      }
    },
    "/api/v1/publications": {
      "get": {
        "operationId": "getPublications",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "default": 1, "example": 1, "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": { "default": 10, "example": 10, "type": "number" }
          },
          {
            "name": "advertId",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "categoryId",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "typeId",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "dateFrom",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "dateTo",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPublicationsDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["AdvertPublication"]
      }
    },
    "/api/v1/publications/adverts/{advertId}/{version}": {
      "get": {
        "operationId": "getAdvertPublication",
        "parameters": [
          {
            "name": "advertId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "version",
            "required": true,
            "in": "path",
            "schema": { "enum": ["A", "B", "C"], "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvertPublicationDetailedDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["AdvertPublication"]
      }
    },
    "/api/v1/publications/adverts/{advertId}": {
      "post": {
        "operationId": "createAdvertPublication",
        "parameters": [
          {
            "name": "advertId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["AdvertPublication"]
      }
    },
    "/api/v1/publications/{publicationId}/adverts/{advertId}/publish": {
      "post": {
        "operationId": "publishAdvertPublication",
        "parameters": [
          {
            "name": "advertId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "publicationId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["AdvertPublication"]
      }
    },
    "/api/v1/publications/{publicationId}/adverts/{advertId}": {
      "patch": {
        "operationId": "updateAdvertPublication",
        "parameters": [
          {
            "name": "advertId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "publicationId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdvertPublicationDto"
              }
            }
          }
        },
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["AdvertPublication"]
      },
      "delete": {
        "operationId": "deleteAdvertPublication",
        "parameters": [
          {
            "name": "advertId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "publicationId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["AdvertPublication"]
      }
    },
    "/api/v1/subscribers/me": {
      "get": {
        "operationId": "getMySubscriber",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SubscriberDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Subscriber"]
      }
    },
    "/api/v1/users/me": {
      "get": {
        "operationId": "getMyUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Users"]
      }
    },
    "/api/v1/users/employees": {
      "get": {
        "operationId": "getEmployees",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetUsersResponse" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Users"]
      }
    },
    "/api/v1/applications/createApplication/{applicationType}": {
      "post": {
        "operationId": "createApplication",
        "parameters": [
          {
            "name": "applicationType",
            "required": true,
            "in": "path",
            "schema": {
              "enum": ["COMMON", "RECALL_BANKRUPTCY", "RECALL_DECEASED"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicationDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Application"]
      }
    },
    "/api/v1/applications/submitApplication/{applicationId}": {
      "post": {
        "operationId": "submitApplication",
        "parameters": [
          {
            "name": "applicationId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Application"]
      }
    },
    "/api/v1/applications/getMyApplications": {
      "get": {
        "operationId": "getMyApplications",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "default": 1, "example": 1, "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": { "default": 10, "example": 10, "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicationsDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Application"]
      }
    },
    "/api/v1/applications/getApplicationById/{applicationId}": {
      "get": {
        "operationId": "getApplicationById",
        "parameters": [
          {
            "name": "applicationId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDetailedDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Application"]
      }
    },
    "/api/v1/applications/getApplicationByCaseId/{caseId}": {
      "get": {
        "operationId": "getApplicationByCaseId",
        "parameters": [
          {
            "name": "caseId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDetailedDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Application"]
      }
    },
    "/api/v1/applications/{applicationId}": {
      "patch": {
        "operationId": "updateApplication",
        "parameters": [
          {
            "name": "applicationId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateApplicationDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDetailedDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Application"]
      }
    },
    "/api/v1/applications/{applicationId}/addDivisionMeetingAdvertToApplication": {
      "post": {
        "operationId": "addDivisionMeetingAdvertToApplication",
        "parameters": [
          {
            "name": "applicationId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDivisionMeetingForApplicationDto"
              }
            }
          }
        },
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Application"]
      }
    },
    "/api/v1/applications/{applicationId}/addDivisionEndingAdvertToApplication": {
      "post": {
        "operationId": "addDivisionEndingAdvertToApplication",
        "parameters": [
          {
            "name": "applicationId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDivisionEndingForApplicationDto"
              }
            }
          }
        },
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Application"]
      }
    },
    "/api/v1/type-categories": {
      "get": {
        "operationId": "getTypeCategories",
        "parameters": [
          {
            "name": "typeId",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "categoryId",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypesWithCategoriesResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["TypeWithCategories"]
      }
    },
    "/api/v1/type-categories/category/{categoryId}": {
      "get": {
        "operationId": "getTypeCategoriesByCategoryId",
        "parameters": [
          {
            "name": "categoryId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypesWithCategoriesResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["TypeWithCategories"]
      }
    },
    "/api/v1/type-categories/type/{typeId}": {
      "get": {
        "operationId": "getTypeCategoriesByTypeId",
        "parameters": [
          {
            "name": "typeId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeWithCategoriesResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["TypeWithCategories"]
      }
    },
    "/api/v1/settlements/{id}": {
      "patch": {
        "operationId": "updateSettlement",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateSettlementDto" }
            }
          }
        },
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "summary": "",
        "tags": ["Settlement"]
      }
    },
    "/api/v1/external/foreclosures/{id}": {
      "get": {
        "description": "Get foreclosure by id",
        "operationId": "getForeclosureById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForeclosureDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Foreclosure"]
      }
    },
    "/api/v1/external/foreclosures/sale": {
      "post": {
        "description": "Creates a new foreclosure advertisement along with its properties",
        "operationId": "createForeclosureSale",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateForeclosureSaleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForeclosureDto" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Foreclosure"]
      }
    },
    "/api/v1/external/foreclosures/sale/{id}": {
      "delete": {
        "description": "Deletes a foreclosure sale by its ID, marks the advert as withdrawn",
        "operationId": "deleteForeclosureSale",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the foreclosure sale",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Foreclosure"]
      }
    },
    "/api/v1/external/foreclosures/sale/{id}/property": {
      "post": {
        "description": "Creates a new property for an existing foreclosure sale",
        "operationId": "createForeclosureProperty",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the foreclosure sale",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForeclosurePropertyDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Foreclosure"]
      }
    },
    "/api/v1/external/foreclosures/sale/{id}/property/{propertyNumber}": {
      "delete": {
        "description": "Deletes a property from an existing foreclosure sale",
        "operationId": "deletePropertyFromForeclosure",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the foreclosure sale",
            "schema": { "type": "string" }
          },
          {
            "name": "propertyNumber",
            "required": true,
            "in": "path",
            "description": "The property number of the property to delete (fastanúmer)",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiErrorDto" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "",
        "tags": ["Foreclosure"]
      }
    },
    "/api/v1/health": {
      "get": {
        "operationId": "HealthController__v1",
        "parameters": [],
        "responses": { "200": { "description": "Health check endpoint." } },
        "tags": ["Health"]
      }
    }
  },
  "info": {
    "title": "The Legal Gazette of Iceland API",
    "description": "The API for the Legal Gazette of Iceland",
    "version": "1.0",
    "contact": {}
  },
  "tags": [{ "name": "Legal gazette - internal API" }],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" }
    },
    "schemas": {
      "TypeModel": { "type": "object", "properties": {} },
      "ApiErrorDto": {
        "type": "object",
        "properties": {
          "statusCode": { "type": "number" },
          "timestamp": { "type": "string" },
          "name": {
            "type": "string",
            "enum": [
              "NotFound",
              "ValidationError",
              "ForeignKeyConstraintError",
              "UniqueConstraintError",
              "TimeoutError",
              "Unauthorized",
              "Forbidden",
              "BadRequest",
              "InternalServerError",
              "UnknownError"
            ],
            "example": [
              "NotFound",
              "ValidationError",
              "ForeignKeyConstraintError",
              "UniqueConstraintError",
              "TimeoutError",
              "Unauthorized",
              "Forbidden",
              "BadRequest",
              "InternalServerError",
              "UnknownError"
            ]
          },
          "message": { "type": "string" },
          "details": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["statusCode", "timestamp"]
      },
      "TypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "UUIDV4 of the entity",
            "example": "182391f7-d355-46f0-bcee-4d8baa68b55d"
          },
          "title": {
            "type": "string",
            "description": "Title of the entity",
            "example": "Base entity"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the entity",
            "example": "base-entity"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "GetTypesDto": {
        "type": "object",
        "properties": {
          "types": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TypeDto" }
          }
        },
        "required": ["types"]
      },
      "CategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "UUIDV4 of the entity",
            "example": "182391f7-d355-46f0-bcee-4d8baa68b55d"
          },
          "title": {
            "type": "string",
            "description": "Title of the entity",
            "example": "Base entity"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the entity",
            "example": "base-entity"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "GetCategoriesDto": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CategoryDto" }
          }
        },
        "required": ["categories"]
      },
      "BaseEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "UUIDV4 of the entity",
            "example": "182391f7-d355-46f0-bcee-4d8baa68b55d"
          },
          "title": {
            "type": "string",
            "description": "Title of the entity",
            "example": "Base entity"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the entity",
            "example": "base-entity"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "GetStatusesDto": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BaseEntityDto" }
          }
        },
        "required": ["statuses"]
      },
      "StatusIdEnum": {
        "type": "string",
        "enum": [
          "63726fce-edcf-412d-85e8-087e99c592f2",
          "cd3bf301-52a1-493e-8c80-a391c310c840",
          "a2f3b1c4-2d5e-4a7b-8c6f-9d1e0f3a2b8c",
          "bd835a1d-0ecb-4aa4-9910-b5e60c30dced",
          "f3a0b1c4-2d5e-4a7b-8c6f-9d1e0f3a2b8c",
          "e2f3b1c4-2d5e-4a7b-8c6f-9d1e0f3a2b8c"
        ]
      },
      "StatusEnum": {
        "type": "string",
        "enum": [
          "Drög",
          "Innsent",
          "Tilbúið til útgáfu",
          "Útgefið",
          "Hafnað",
          "Afturkallað"
        ]
      },
      "StatusDto": {
        "type": "object",
        "properties": {
          "id": { "allOf": [{ "$ref": "#/components/schemas/StatusIdEnum" }] },
          "title": { "allOf": [{ "$ref": "#/components/schemas/StatusEnum" }] },
          "slug": { "type": "string" }
        },
        "required": ["id", "title", "slug"]
      },
      "CourtDistrictDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "UUIDV4 of the entity",
            "example": "182391f7-d355-46f0-bcee-4d8baa68b55d"
          },
          "title": {
            "type": "string",
            "description": "Title of the entity",
            "example": "Base entity"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the entity",
            "example": "base-entity"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "GetCourtDistrictsDto": {
        "type": "object",
        "properties": {
          "courtDistricts": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CourtDistrictDto" }
          }
        },
        "required": ["courtDistricts"]
      },
      "ResponsiblePartyDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the party responsible for the advert",
            "example": "Ríkisskattstjóri, hlutafélagaskrá"
          },
          "nationalId": {
            "type": "string",
            "description": "The national id of who is responsible for the advert",
            "example": "1234567890"
          },
          "signatureName": {
            "type": "string",
            "description": "The name of the institution signing the advert",
            "example": "Ríkisskattstjóri, hlutafélagaskrá"
          },
          "signatureLocation": {
            "type": "string",
            "description": "Where the signature took place",
            "example": "Reykjavík"
          },
          "signatureDate": {
            "type": "string",
            "description": "The date when the responsible party signed the advert in ISO 8601 format",
            "example": "2023-10-01T12:00:00Z"
          },
          "signatureOnBehalfOf": {
            "type": "string",
            "description": "The name of the person signing on behalf of the responsible party prefixed with f.h.",
            "example": "Jón Jónsson"
          }
        },
        "required": [
          "name",
          "nationalId",
          "signatureName",
          "signatureLocation",
          "signatureDate"
        ]
      },
      "PartyEntityDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the party",
            "example": "Jón Jónsson / Jón ehf."
          },
          "nationalId": {
            "type": "string",
            "description": "National id of the party",
            "example": "1234567890"
          },
          "address": {
            "type": "string",
            "description": "Address of the party",
            "example": "Laugavegur 1, 101 Reykjavik"
          },
          "role": {
            "type": "string",
            "description": "Role of the party, always comes first if present",
            "example": "Stjórnarmaður, meðstjórnandi o.s.frv."
          },
          "jobTitle": {
            "type": "string",
            "description": "Job title of the party, always comes last if present",
            "example": "löggiltur endurskoðandi"
          }
        },
        "required": ["name"]
      },
      "CompanyBoardDto": {
        "type": "object",
        "properties": {
          "appointedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date when the board was appointed",
            "example": "2023-10-01T12:00:00Z (ISO 8601 format)"
          },
          "members": {
            "description": "The members of the company board (Stjórn)",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PartyEntityDto" }
          },
          "executiveBoardMembers": {
            "description": "The executive members of the company board (Framkvæmdarstjórn)",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PartyEntityDto" }
          }
        },
        "required": ["appointedDate", "members"]
      },
      "RegisterCompanyHlutafelagDto": {
        "type": "object",
        "properties": {
          "responsibleParty": {
            "description": "The party responsible for the company",
            "allOf": [{ "$ref": "#/components/schemas/ResponsiblePartyDto" }]
          },
          "name": {
            "type": "string",
            "description": "Name of the registered company (Félagið heitir)",
            "example": "HXM ehf."
          },
          "nationalId": {
            "type": "string",
            "description": "National id of the registered company (Kennitala fyrirtækis)",
            "example": "1234567890"
          },
          "registeredAddress": {
            "type": "string",
            "description": "Address of the registered company (Skráð heimilisfang fyrirtækis)",
            "example": "Laugavegur 1, 101 Reykjavik"
          },
          "creators": {
            "description": "List of registered company creators (Stofnendur)",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PartyEntityDto" }
          },
          "approvedDate": {
            "type": "string",
            "description": "Date when the company was accepted (Dagsetning samþykkta er)",
            "example": "2023-10-01T12:00:00Z (ISO 8601 format)"
          },
          "board": {
            "description": "The board of the company (Stjórn)",
            "allOf": [{ "$ref": "#/components/schemas/CompanyBoardDto" }]
          },
          "theFirmWrites": {
            "type": "string",
            "example": "Ef einn í stjórn:  Stjórnarmaður, ef stjórn er fjölskipuð: Meirihluti stjórnar (Firmað ritar)"
          },
          "procurationHolders": {
            "description": "The procuration holders of the company (Prókuruumboð)",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PartyEntityDto" }
          },
          "auditors": {
            "description": "The auditors of the company (Skoðunarmaður/endurskoðandi)",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PartyEntityDto" }
          },
          "capital": {
            "type": "number",
            "description": "The capital of the company in ISK (Hlutafé kr.)",
            "example": 1000000
          },
          "purpose": {
            "type": "string",
            "description": "The purpose of the company (Tilgangur)"
          },
          "benefits": {
            "type": "boolean",
            "description": "Are there special benefits (Hömlur á meðferð hlutabréfa)",
            "example": false
          },
          "liquidationObligation": {
            "type": "boolean",
            "description": "Is there an obligation for liquidation (Lausnarskylda á hlutabréfum)",
            "example": false
          }
        },
        "required": [
          "responsibleParty",
          "name",
          "nationalId",
          "registeredAddress",
          "creators",
          "approvedDate",
          "board",
          "theFirmWrites",
          "auditors",
          "capital",
          "purpose",
          "benefits",
          "liquidationObligation"
        ]
      },
      "AdditionalPropertiesDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the addtional information",
            "example": "Stjórn / Stjórnarformaður og framkvæmdastjórn"
          },
          "value": {
            "description": "The value of the addtional information",
            "allOf": [{ "$ref": "#/components/schemas/PartyEntityDto" }]
          }
        },
        "required": ["key", "value"]
      },
      "RegisterCompanyFirmaskraDto": {
        "type": "object",
        "properties": {
          "responsibleParty": {
            "description": "The party responsible for the company",
            "allOf": [{ "$ref": "#/components/schemas/ResponsiblePartyDto" }]
          },
          "name": {
            "type": "string",
            "description": "Name of the registered company (Félagið heitir)",
            "example": "HXM ehf."
          },
          "nationalId": {
            "type": "string",
            "description": "National id of the registered company (Kennitala fyrirtækis)",
            "example": "1234567890"
          },
          "registeredAddress": {
            "type": "string",
            "description": "Address of the registered company (Skráð heimilisfang fyrirtækis)",
            "example": "Laugavegur 1, 101 Reykjavik"
          },
          "creators": {
            "description": "List of registered company creators (Stofnendur)",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PartyEntityDto" }
          },
          "approvedDate": {
            "type": "string",
            "description": "Date when the company was accepted (Dagsetning samþykkta er)",
            "example": "2023-10-01T12:00:00Z (ISO 8601 format)"
          },
          "procurationHolders": {
            "description": "The procuration holders of the company (Prókuruumboð)",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PartyEntityDto" }
          },
          "purpose": {
            "type": "string",
            "description": "The purpose of the company (Tilgangur)"
          },
          "taxMembership": {
            "type": "string",
            "description": "Tax membership status (Skattaðlid)",
            "example": "félagið er sjálfstæður skattaðili"
          },
          "firmWriting": {
            "type": "string",
            "description": "Firmaritun",
            "example": "Allir félagsmenn saman"
          },
          "additionalProperties": {
            "description": "Additional properties (Auka eigindi, birtast neðst í auglýsingu)",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdditionalPropertiesDto" }
          }
        },
        "required": [
          "responsibleParty",
          "name",
          "nationalId",
          "registeredAddress",
          "creators",
          "approvedDate",
          "purpose",
          "taxMembership",
          "firmWriting"
        ]
      },
      "AnnouncementItem": {
        "type": "string",
        "enum": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "J",
          "K",
          "L",
          "M",
          "N",
          "O",
          "P",
          "R",
          "S",
          "T"
        ]
      },
      "AdditionalAnnouncementsDto": {
        "type": "object",
        "properties": {
          "companyNationalId": {
            "type": "string",
            "description": "The national id of the company (Kennitala fyrirtækis)",
            "example": "1234567890"
          },
          "companyName": {
            "type": "string",
            "description": "The name of the company (Heiti fyrirtækis)",
            "example": "HXM ehf."
          },
          "companyLocation": {
            "type": "string",
            "description": "The location of the company (Staðsetning fyrirtækis)",
            "example": "Reykjavík"
          },
          "announcementItems": {
            "type": "array",
            "description": "List of additional announcements to create (Tegundir)",
            "example": ["A", "J"],
            "items": { "$ref": "#/components/schemas/AnnouncementItem" }
          }
        },
        "required": [
          "companyNationalId",
          "companyName",
          "companyLocation",
          "announcementItems"
        ]
      },
      "CreateAdditionalAnnouncementsDto": {
        "type": "object",
        "properties": {
          "responsibleParty": {
            "description": "The party responsible for the additional announcements",
            "allOf": [{ "$ref": "#/components/schemas/ResponsiblePartyDto" }]
          },
          "announcementYear": {
            "type": "number",
            "description": "The year of the additional announcements to create (1900 - 2100)",
            "example": 2024
          },
          "announcementMonth": {
            "type": "number",
            "description": "The month of the additional announcements to create (0 - 11)",
            "example": 6
          },
          "announcements": {
            "description": "List of additional announcements to create (Fjöldi tilkynninga)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalAnnouncementsDto"
            }
          }
        },
        "required": [
          "responsibleParty",
          "announcementYear",
          "announcementMonth",
          "announcements"
        ]
      },
      "ApplicationTypeEnum": {
        "type": "string",
        "enum": ["COMMON", "RECALL_BANKRUPTCY", "RECALL_DECEASED"]
      },
      "CaseDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "ISO representation of the creation date",
            "example": "2021-08-31T12:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "ISO representation of the updated date",
            "example": "2021-08-31T12:00:00.000Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "ISO representation of the deletion date",
            "example": "2021-08-31T12:00:00.000Z",
            "nullable": true
          },
          "id": { "type": "string" },
          "caseNumber": { "type": "string" },
          "applicationType": {
            "allOf": [{ "$ref": "#/components/schemas/ApplicationTypeEnum" }]
          }
        },
        "required": ["createdAt", "updatedAt", "id", "caseNumber"]
      },
      "Paging": {
        "type": "object",
        "properties": {
          "page": { "type": "number", "example": 1 },
          "totalPages": { "type": "number", "example": 10 },
          "totalItems": { "type": "number", "example": 1000 },
          "nextPage": { "type": "number", "example": 2, "nullable": true },
          "previousPage": { "type": "number", "example": 1, "nullable": true },
          "pageSize": {
            "type": "number",
            "example": 10,
            "minimum": 1,
            "maximum": 100
          },
          "hasNextPage": { "type": "boolean", "example": true },
          "hasPreviousPage": { "type": "boolean", "example": false }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "nextPage",
          "previousPage",
          "pageSize",
          "hasNextPage",
          "hasPreviousPage"
        ]
      },
      "GetCasesDto": {
        "type": "object",
        "properties": {
          "cases": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CaseDto" }
          },
          "paging": { "$ref": "#/components/schemas/Paging" }
        },
        "required": ["cases", "paging"]
      },
      "UpdateAdvertDto": {
        "type": "object",
        "properties": {
          "scheduledAt": { "type": "string" },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "categoryId": { "type": "string" },
          "typeId": { "type": "string" },
          "additionalText": { "type": "string" },
          "caption": { "type": "string" },
          "signatureName": { "type": "string" },
          "signatureLocation": { "type": "string" },
          "signatureOnBehalfOf": { "type": "string" },
          "signatureDate": { "type": "string" },
          "divisionMeetingLocation": { "type": "string" },
          "divisionMeetingDate": { "type": "string" },
          "judgementDate": { "type": "string" },
          "courtDistrictId": { "type": "string" }
        }
      },
      "AdvertVersionEnum": { "type": "string", "enum": ["A", "B", "C"] },
      "AdvertPublicationDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "advertId": { "type": "string" },
          "scheduledAt": { "type": "string" },
          "publishedAt": { "type": "string", "nullable": true },
          "version": {
            "allOf": [{ "$ref": "#/components/schemas/AdvertVersionEnum" }]
          },
          "isLegacy": { "type": "boolean" }
        },
        "required": [
          "id",
          "advertId",
          "scheduledAt",
          "publishedAt",
          "version",
          "isLegacy"
        ]
      },
      "SettlementDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "liquidatorName": { "type": "string" },
          "liquidatorLocation": { "type": "string" },
          "settlementName": { "type": "string" },
          "settlementNationalId": { "type": "string" },
          "settlementAddress": { "type": "string" },
          "declaredClaims": { "type": "number" },
          "settlementDeadline": { "type": "string", "nullable": true },
          "settlementDateOfDeath": { "type": "string", "nullable": true }
        },
        "required": [
          "id",
          "liquidatorName",
          "liquidatorLocation",
          "settlementName",
          "settlementNationalId",
          "settlementAddress",
          "declaredClaims",
          "settlementDeadline"
        ]
      },
      "CommunicationChannelDto": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "name": { "type": "string" },
          "phone": { "type": "string" }
        },
        "required": ["email"]
      },
      "CommentTypeEnum": {
        "type": "string",
        "enum": ["SUBMIT", "ASSIGN", "STATUS_UPDATE", "COMMENT"]
      },
      "CommentDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": {
            "allOf": [{ "$ref": "#/components/schemas/CommentTypeEnum" }]
          },
          "status": { "$ref": "#/components/schemas/StatusDto" },
          "advertId": { "type": "string" },
          "actor": { "type": "string" },
          "receiver": { "type": "string" },
          "comment": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "type", "status", "advertId", "actor", "createdAt"]
      },
      "AdvertDetailedDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "ISO representation of the creation date",
            "example": "2021-08-31T12:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "ISO representation of the updated date",
            "example": "2021-08-31T12:00:00.000Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "ISO representation of the deletion date",
            "example": "2021-08-31T12:00:00.000Z",
            "nullable": true
          },
          "id": { "type": "string" },
          "scheduledAt": { "type": "string" },
          "category": { "$ref": "#/components/schemas/CategoryDto" },
          "type": { "$ref": "#/components/schemas/TypeDto" },
          "status": { "$ref": "#/components/schemas/StatusDto" },
          "title": { "type": "string" },
          "createdBy": { "type": "string" },
          "assignedUser": { "type": "string" },
          "publications": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertPublicationDto" }
          },
          "caseId": { "type": "string" },
          "canEdit": { "type": "boolean" },
          "publicationNumber": { "type": "string", "nullable": true },
          "content": { "type": "string", "nullable": true },
          "caption": { "type": "string", "nullable": true },
          "additionalText": { "type": "string", "nullable": true },
          "signatureName": { "type": "string" },
          "signatureLocation": { "type": "string" },
          "signatureOnBehalfOf": { "type": "string", "nullable": true },
          "signatureDate": { "type": "string" },
          "judgementDate": { "type": "string" },
          "divisionMeetingDate": { "type": "string" },
          "divisionMeetingLocation": { "type": "string" },
          "settlement": { "$ref": "#/components/schemas/SettlementDto" },
          "courtDistrict": { "$ref": "#/components/schemas/CourtDistrictDto" },
          "communicationChannels": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CommunicationChannelDto" }
          },
          "paidAt": { "type": "string" },
          "comments": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CommentDto" }
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "id",
          "scheduledAt",
          "category",
          "type",
          "status",
          "title",
          "createdBy",
          "publications",
          "canEdit",
          "publicationNumber",
          "content",
          "caption",
          "additionalText",
          "signatureName",
          "signatureLocation",
          "signatureOnBehalfOf",
          "signatureDate",
          "communicationChannels",
          "comments"
        ]
      },
      "AdvertStatusCounterItemDto": {
        "type": "object",
        "properties": {
          "status": { "$ref": "#/components/schemas/StatusDto" },
          "count": { "type": "number" }
        },
        "required": ["status", "count"]
      },
      "GetAdvertsStatusCounterDto": {
        "type": "object",
        "properties": {
          "submitted": {
            "$ref": "#/components/schemas/AdvertStatusCounterItemDto"
          },
          "readyForPublication": {
            "$ref": "#/components/schemas/AdvertStatusCounterItemDto"
          },
          "withdrawn": {
            "$ref": "#/components/schemas/AdvertStatusCounterItemDto"
          },
          "rejected": {
            "$ref": "#/components/schemas/AdvertStatusCounterItemDto"
          },
          "published": {
            "$ref": "#/components/schemas/AdvertStatusCounterItemDto"
          }
        },
        "required": [
          "submitted",
          "readyForPublication",
          "withdrawn",
          "rejected",
          "published"
        ]
      },
      "AdvertDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "ISO representation of the creation date",
            "example": "2021-08-31T12:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "ISO representation of the updated date",
            "example": "2021-08-31T12:00:00.000Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "ISO representation of the deletion date",
            "example": "2021-08-31T12:00:00.000Z",
            "nullable": true
          },
          "id": { "type": "string" },
          "scheduledAt": { "type": "string" },
          "category": { "$ref": "#/components/schemas/CategoryDto" },
          "type": { "$ref": "#/components/schemas/TypeDto" },
          "status": { "$ref": "#/components/schemas/StatusDto" },
          "title": { "type": "string" },
          "createdBy": { "type": "string" },
          "assignedUser": { "type": "string" },
          "publications": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertPublicationDto" }
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "id",
          "scheduledAt",
          "category",
          "type",
          "status",
          "title",
          "createdBy",
          "publications"
        ]
      },
      "GetAdvertsDto": {
        "type": "object",
        "properties": {
          "adverts": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertDto" }
          },
          "paging": { "$ref": "#/components/schemas/Paging" }
        },
        "required": ["adverts", "paging"]
      },
      "PublishAdvertsBody": {
        "type": "object",
        "properties": {
          "advertIds": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["advertIds"]
      },
      "PublishedPublicationDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "advertId": { "type": "string" },
          "publishedAt": { "type": "string" },
          "title": { "type": "string" },
          "type": { "$ref": "#/components/schemas/TypeDto" },
          "category": { "$ref": "#/components/schemas/CategoryDto" },
          "version": {
            "allOf": [{ "$ref": "#/components/schemas/AdvertVersionEnum" }]
          },
          "publicationNumber": { "type": "string" },
          "createdBy": { "type": "string" },
          "isLegacy": { "type": "boolean" }
        },
        "required": [
          "id",
          "advertId",
          "publishedAt",
          "title",
          "type",
          "category",
          "version",
          "publicationNumber",
          "createdBy",
          "isLegacy"
        ]
      },
      "GetPublicationsDto": {
        "type": "object",
        "properties": {
          "publications": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PublishedPublicationDto" }
          },
          "paging": { "$ref": "#/components/schemas/Paging" }
        },
        "required": ["publications", "paging"]
      },
      "AdvertPublicationDetailedDto": {
        "type": "object",
        "properties": {
          "publication": {
            "$ref": "#/components/schemas/AdvertPublicationDto"
          },
          "advert": { "$ref": "#/components/schemas/AdvertDto" },
          "html": { "type": "string" }
        },
        "required": ["publication", "advert", "html"]
      },
      "UpdateAdvertPublicationDto": {
        "type": "object",
        "properties": { "scheduledAt": { "type": "string" } },
        "required": ["scheduledAt"]
      },
      "SubscriberDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "nationalId": { "type": "string" },
          "isActive": { "type": "boolean" }
        },
        "required": ["id", "nationalId", "isActive"]
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "nationalId": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "phone": { "type": "string" }
        },
        "required": ["id", "nationalId", "name", "email"]
      },
      "GetUsersResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserDto" }
          }
        },
        "required": ["users"]
      },
      "ApplicationDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" },
          "caseId": { "type": "string" },
          "nationalId": { "type": "string" },
          "applicationType": {
            "allOf": [{ "$ref": "#/components/schemas/ApplicationTypeEnum" }]
          },
          "category": { "$ref": "#/components/schemas/CategoryDto" },
          "type": { "$ref": "#/components/schemas/TypeDto" },
          "status": {
            "type": "string",
            "enum": ["DRAFT", "SUBMITTED", "FINISHED"]
          },
          "title": { "type": "string" }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "caseId",
          "nationalId",
          "applicationType",
          "status",
          "title"
        ]
      },
      "ApplicationsDto": {
        "type": "object",
        "properties": {
          "page": { "type": "number", "example": 1 },
          "totalPages": { "type": "number", "example": 10 },
          "totalItems": { "type": "number", "example": 1000 },
          "nextPage": { "type": "number", "example": 2, "nullable": true },
          "previousPage": { "type": "number", "example": 1, "nullable": true },
          "pageSize": {
            "type": "number",
            "example": 10,
            "minimum": 1,
            "maximum": 100
          },
          "hasNextPage": { "type": "boolean", "example": true },
          "hasPreviousPage": { "type": "boolean", "example": false },
          "applications": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ApplicationDto" }
          }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "nextPage",
          "previousPage",
          "pageSize",
          "hasNextPage",
          "hasPreviousPage",
          "applications"
        ]
      },
      "ApplicationDetailedDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" },
          "caseId": { "type": "string" },
          "nationalId": { "type": "string" },
          "applicationType": {
            "allOf": [{ "$ref": "#/components/schemas/ApplicationTypeEnum" }]
          },
          "category": { "$ref": "#/components/schemas/CategoryDto" },
          "type": { "$ref": "#/components/schemas/TypeDto" },
          "status": {
            "type": "string",
            "enum": ["DRAFT", "SUBMITTED", "FINISHED"]
          },
          "title": { "type": "string" },
          "typeId": { "type": "string", "nullable": true },
          "categoryId": { "type": "string", "nullable": true },
          "courtDistrictId": { "type": "string", "nullable": true },
          "islandIsApplicationId": { "type": "string", "nullable": true },
          "caption": { "type": "string", "nullable": true },
          "additionalText": { "type": "string", "nullable": true },
          "judgmentDate": { "type": "string", "nullable": true },
          "html": { "type": "string", "nullable": true },
          "signatureName": { "type": "string", "nullable": true },
          "signatureOnBehalfOf": { "type": "string", "nullable": true },
          "signatureLocation": { "type": "string", "nullable": true },
          "signatureDate": { "type": "string", "nullable": true },
          "liquidatorName": { "type": "string", "nullable": true },
          "liquidatorLocation": { "type": "string", "nullable": true },
          "liquidatorOnBehalfOf": { "type": "string", "nullable": true },
          "settlementName": { "type": "string", "nullable": true },
          "settlementNationalId": { "type": "string", "nullable": true },
          "settlementAddress": { "type": "string", "nullable": true },
          "settlementDeadlineDate": { "type": "string", "nullable": true },
          "settlementDateOfDeath": { "type": "string", "nullable": true },
          "divisionMeetingDate": { "type": "string", "nullable": true },
          "divisionMeetingLocation": { "type": "string", "nullable": true },
          "publishingDates": { "type": "array", "items": { "type": "string" } },
          "communicationChannels": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CommunicationChannelDto" }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "caseId",
          "nationalId",
          "applicationType",
          "status",
          "title",
          "publishingDates",
          "communicationChannels"
        ]
      },
      "UpdateApplicationDto": {
        "type": "object",
        "properties": {
          "typeId": { "type": "string", "nullable": true },
          "categoryId": { "type": "string", "nullable": true },
          "courtDistrictId": { "type": "string", "nullable": true },
          "islandIsApplicationId": { "type": "string", "nullable": true },
          "caption": { "type": "string", "nullable": true },
          "additionalText": { "type": "string", "nullable": true },
          "judgmentDate": { "type": "string", "nullable": true },
          "html": { "type": "string", "nullable": true },
          "signatureName": { "type": "string", "nullable": true },
          "signatureOnBehalfOf": { "type": "string", "nullable": true },
          "signatureLocation": { "type": "string", "nullable": true },
          "signatureDate": { "type": "string", "nullable": true },
          "liquidatorName": { "type": "string", "nullable": true },
          "liquidatorLocation": { "type": "string", "nullable": true },
          "liquidatorOnBehalfOf": { "type": "string", "nullable": true },
          "settlementName": { "type": "string", "nullable": true },
          "settlementNationalId": { "type": "string", "nullable": true },
          "settlementAddress": { "type": "string", "nullable": true },
          "settlementDeadlineDate": { "type": "string", "nullable": true },
          "settlementDateOfDeath": { "type": "string", "nullable": true },
          "divisionMeetingDate": { "type": "string", "nullable": true },
          "divisionMeetingLocation": { "type": "string", "nullable": true },
          "publishingDates": { "type": "array", "items": { "type": "string" } },
          "communicationChannels": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CommunicationChannelDto" }
          }
        }
      },
      "CreateCommunicationChannelDto": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "name": { "type": "string" },
          "phone": { "type": "string" }
        },
        "required": ["email"]
      },
      "AddDivisionMeetingForApplicationDto": {
        "type": "object",
        "properties": {
          "meetingDate": { "type": "string" },
          "meetingLocation": { "type": "string" },
          "signatureLocation": { "type": "string" },
          "signatureDate": { "type": "string" },
          "signatureName": { "type": "string" },
          "signatureOnBehalfOf": { "type": "string" },
          "additionalText": { "type": "string" },
          "communicationChannels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCommunicationChannelDto"
            }
          }
        },
        "required": [
          "meetingDate",
          "meetingLocation",
          "signatureLocation",
          "signatureDate",
          "signatureName"
        ]
      },
      "AddDivisionEndingForApplicationDto": {
        "type": "object",
        "properties": {
          "signatureLocation": { "type": "string" },
          "signatureDate": { "type": "string" },
          "signatureName": { "type": "string" },
          "signatureOnBehalfOf": { "type": "string" },
          "additionalText": { "type": "string" },
          "communicationChannels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCommunicationChannelDto"
            }
          },
          "scheduledAt": { "type": "string" },
          "declaredClaims": { "type": "number" }
        },
        "required": [
          "signatureLocation",
          "signatureDate",
          "signatureName",
          "scheduledAt",
          "declaredClaims"
        ]
      },
      "TypeWithCategoriesDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "title": { "type": "string" },
          "slug": { "type": "string" },
          "categories": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CategoryDto" }
          }
        },
        "required": ["id", "title", "slug", "categories"]
      },
      "TypesWithCategoriesResponseDto": {
        "type": "object",
        "properties": {
          "types": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TypeWithCategoriesDto" }
          }
        },
        "required": ["types"]
      },
      "TypeWithCategoriesResponseDto": {
        "type": "object",
        "properties": {
          "type": { "$ref": "#/components/schemas/TypeWithCategoriesDto" }
        },
        "required": ["type"]
      },
      "UpdateSettlementDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "liquidatorName": { "type": "string" },
          "liquidatorLocation": { "type": "string" },
          "settlementName": { "type": "string" },
          "settlementNationalId": { "type": "string" },
          "settlementAddress": { "type": "string" },
          "declaredClaims": { "type": "number" },
          "settlementDeadline": { "type": "string", "nullable": true },
          "settlementDateOfDeath": { "type": "string", "nullable": true }
        }
      },
      "ForeclosurePropertyDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "foreclosureId": {
            "type": "string",
            "description": "The ID of the foreclosure this property belongs to"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the property was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the property was last updated"
          },
          "propertyName": {
            "type": "string",
            "description": "The name of the property"
          },
          "propertyNumber": {
            "type": "string",
            "description": "The number of the property (fastanúmer)"
          },
          "propertyTotalPrice": {
            "type": "number",
            "description": "The total price of the property"
          },
          "respondent": {
            "type": "string",
            "description": "Respondent name (Gerðarþoli/ar)"
          },
          "claimant": {
            "type": "string",
            "description": "The name of the claimant (Gerðarbeiðandi)"
          }
        },
        "required": [
          "id",
          "foreclosureId",
          "createdAt",
          "updatedAt",
          "propertyName",
          "propertyNumber",
          "propertyTotalPrice",
          "respondent",
          "claimant"
        ]
      },
      "ForeclosureDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the foreclosure"
          },
          "advertId": {
            "type": "string",
            "description": "The ID of the advert the foreclosure belongs to"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the foreclosure was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the foreclosure was last updated"
          },
          "foreclosureRegion": {
            "type": "string",
            "description": "The land region of where the foreclosure is located"
          },
          "foreclosureAddress": {
            "type": "string",
            "description": "The address of the foreclosure"
          },
          "foreclosureDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the foreclosure"
          },
          "properties": {
            "description": "List of all the properties listed in the foreclosure",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ForeclosurePropertyDto" }
          }
        },
        "required": [
          "id",
          "advertId",
          "createdAt",
          "updatedAt",
          "foreclosureRegion",
          "foreclosureAddress",
          "foreclosureDate",
          "properties"
        ]
      },
      "CreateForeclosurePropertyDto": {
        "type": "object",
        "properties": {
          "propertyName": {
            "type": "string",
            "description": "The name of the property"
          },
          "propertyNumber": {
            "type": "string",
            "description": "The number of the property (fastanúmer)"
          },
          "propertyTotalPrice": {
            "type": "number",
            "description": "The total price of the property"
          },
          "respondent": {
            "type": "string",
            "description": "Respondent name (Gerðarþoli/ar)"
          },
          "claimant": {
            "type": "string",
            "description": "The name of the claimant (Gerðarbeiðandi)"
          }
        },
        "required": [
          "propertyName",
          "propertyNumber",
          "propertyTotalPrice",
          "respondent",
          "claimant"
        ]
      },
      "CreateForeclosureSaleDto": {
        "type": "object",
        "properties": {
          "foreclosureRegion": {
            "type": "string",
            "description": "The land region of where the foreclosure is located"
          },
          "foreclosureAddress": {
            "type": "string",
            "description": "The address of the foreclosure"
          },
          "foreclosureDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the foreclosure"
          },
          "responsibleParty": {
            "description": "The responsible party for the foreclosure",
            "allOf": [{ "$ref": "#/components/schemas/ResponsiblePartyDto" }]
          },
          "properties": {
            "description": "List of all the properties listed in the foreclosure",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateForeclosurePropertyDto"
            }
          }
        },
        "required": [
          "foreclosureRegion",
          "foreclosureAddress",
          "foreclosureDate",
          "responsibleParty",
          "properties"
        ]
      }
    }
  }
}
