'use strict'

/** @type {import('sequelize-cli').Migration} */
module.exports = {
  async up(queryInterface) {
    return await queryInterface.sequelize.query(`
    BEGIN;

    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

    CREATE TABLE CASE_TYPE (
      ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      CREATED_AT TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
      UPDATED_AT TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
      DELETED_AT TIMESTAMPTZ,

      TITLE TEXT NOT NULL,
      SLUG TEXT NOT NULL UNIQUE
    );

    CREATE TABLE CASE_CATEGORY (
      ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      CREATED_AT TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
      UPDATED_AT TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
      DELETED_AT TIMESTAMPTZ,

      TITLE TEXT NOT NULL,
      SLUG TEXT NOT NULL UNIQUE,

      CASE_TYPE_ID UUID NOT NULL REFERENCES CASE_TYPE(ID) ON DELETE CASCADE
    );

    CREATE TABLE CASE_STATUS (
      ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      CREATED_AT TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
      UPDATED_AT TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
      DELETED_AT TIMESTAMPTZ,

      TITLE TEXT NOT NULL,
      SLUG TEXT NOT NULL UNIQUE
    );

    CREATE TABLE CASES (
      ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      CREATED_AT TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
      UPDATED_AT TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
      DELETED_AT TIMESTAMPTZ,

      APPLICATION_ID UUID,
      CASE_TYPE_ID UUID NOT NULL REFERENCES CASE_TYPE(ID),
      CASE_CATEGORY_ID UUID NOT NULL REFERENCES CASE_CATEGORY(ID),
      CASE_STATUS_ID UUID NOT NULL REFERENCES CASE_STATUS(ID) DEFAULT 'cd3bf301-52a1-493e-8c80-a391c310c840',

      CASE_TITLE TEXT NOT NULL,
      CASE_NUMBER TEXT NOT NULL UNIQUE
    );


    CREATE TABLE COMMON_CASE (
      ID UUID PRIMARY KEY REFERENCES CASES(ID),
      CREATED_AT TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
      UPDATED_AT TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
      DELETED_AT TIMESTAMPTZ,

      CAPTION TEXT NOT NULL,
      SIGNATURE_LOCATION TEXT NOT NULL,
      SIGNATURE_NAME TEXT NOT NULL,
      SIGNATURE_DATE TIMESTAMPTZ NOT NULL
    );

    CREATE TABLE COMMUNICATION_CHANNEL (
      ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      CREATED_AT TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
      UPDATED_AT TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
      DELETED_AT TIMESTAMPTZ,

      EMAIL TEXT NOT NULL,
      NAME TEXT,
      PHONE TEXT,

      CASE_ID UUID NOT NULL REFERENCES CASES(ID)
    );

    CREATE TABLE ADVERT (
      ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      CREATED_AT TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
      UPDATED_AT TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
      DELETED_AT TIMESTAMPTZ,

      SCHEDULED_AT TIMESTAMPTZ NOT NULL,
      PUBLISHED_AT TIMESTAMPTZ DEFAULT NULL,
      PUBLICATION_NUMBER TEXT NOT NULL UNIQUE,
      HTML TEXT NOT NULL,

      CASE_ID UUID NOT NULL REFERENCES CASES(ID)
    );

    CREATE INDEX idx_case_type_title_asc ON CASE_TYPE (TITLE ASC);

    CREATE INDEX idx_case_category_title_asc ON CASE_CATEGORY (TITLE ASC);

    CREATE INDEX idx_case_status_title_asc ON CASE_STATUS (TITLE ASC);

    CREATE INDEX idx_advert_caseid_scheduledat ON advert (case_id, scheduled_at);

    CREATE INDEX idx_advert_published_at_desc ON ADVERT (PUBLISHED_AT DESC) WHERE PUBLISHED_AT IS NOT NULL;

    COMMIT;

    `)
  },

  async down(queryInterface) {
    return await queryInterface.sequelize.query(`
    BEGIN;

    DROP INDEX idx_case_category_title_asc;
    DROP INDEX idx_case_type_title_asc;
    DROP INDEX idx_case_status_title_asc;
    DROP INDEX idx_case_publication_dates_scheduled_at_asc;
    DROP INDEX idx_common_case_caption_asc;
    DROP INDEX idx_advert_published_at_asc;

    DROP TABLE ADVERT;
    DROP TABLE COMMUNICATION_CHANNEL;
    DROP TABLE COMMON_CASE;
    DROP TABLE CASES;
    DROP TABLE CASE_STATUS;
    DROP TABLE CASE_CATEGORY;
    DROP TABLE CASE_TYPE;

    DROP EXTENSION IF EXISTS "uuid-ossp";

    COMMIT;

    `)
  },
}
