{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/cases/{id}": {
      "get": {
        "operationId": "getCase",
        "summary": "Get case by ID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Case by ID.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Case" }
              }
            }
          },
          "404": { "description": "Case not found." }
        }
      }
    },
    "/api/v1/cases": {
      "get": {
        "operationId": "getCases",
        "summary": "Get cases.",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "String to search for in cases.",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": { "type": "number" }
          },
          {
            "name": "caseNumber",
            "required": false,
            "in": "query",
            "description": "Case number to filter on, takes into account `caseNumber` on `Case`.",
            "schema": { "type": "string" }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Status to filter cases on, takes into account `status` on `Case`.",
            "schema": {
              "enum": ["Innsent", "Grunnvinnsla", "Yfirlestur", "Tilbúið"],
              "type": "string"
            }
          },
          {
            "name": "employeeId",
            "required": false,
            "in": "query",
            "description": "Id of the employee to filter cases on, takes into account `employeeId` on `Case` and `CaseComment`.",
            "schema": { "type": "string" }
          },
          {
            "name": "published",
            "required": false,
            "in": "query",
            "description": "Boolean to filter cases on, takes into account `published` on `Case`.",
            "schema": { "type": "string" }
          },
          {
            "name": "fastTrack",
            "required": false,
            "in": "query",
            "description": "Boolean to filter cases on, takes into account `fastTrack` on `Case`.",
            "schema": { "type": "string" }
          },
          {
            "name": "institution",
            "required": false,
            "in": "query",
            "description": "Institution to filter cases on, takes into account `institution` on `Case`.",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "dateFrom",
            "required": false,
            "in": "query",
            "description": "Date from which to filter adverts on, inclusive, takes into account `createdDate`, `updatedDate` and `signatureDate`.",
            "schema": { "type": "string" }
          },
          {
            "name": "dateTo",
            "required": false,
            "in": "query",
            "description": "Date to which to filter adverts on, inclusive, takes into account `createdDate`, `updatedDate` and `signatureDate`.",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "All cases.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CasesReponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/cases/overview/editorial": {
      "get": {
        "operationId": "getEditorialOverview",
        "summary": "Get overview for cases in progress.",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "String to search for in cases.",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": { "type": "number" }
          },
          {
            "name": "caseNumber",
            "required": false,
            "in": "query",
            "description": "Case number to filter on, takes into account `caseNumber` on `Case`.",
            "schema": { "type": "string" }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Status to filter cases on, takes into account `status` on `Case`.",
            "schema": {
              "enum": ["Innsent", "Grunnvinnsla", "Yfirlestur", "Tilbúið"],
              "type": "string"
            }
          },
          {
            "name": "employeeId",
            "required": false,
            "in": "query",
            "description": "Id of the employee to filter cases on, takes into account `employeeId` on `Case` and `CaseComment`.",
            "schema": { "type": "string" }
          },
          {
            "name": "published",
            "required": false,
            "in": "query",
            "description": "Boolean to filter cases on, takes into account `published` on `Case`.",
            "schema": { "type": "string" }
          },
          {
            "name": "fastTrack",
            "required": false,
            "in": "query",
            "description": "Boolean to filter cases on, takes into account `fastTrack` on `Case`.",
            "schema": { "type": "string" }
          },
          {
            "name": "institution",
            "required": false,
            "in": "query",
            "description": "Institution to filter cases on, takes into account `institution` on `Case`.",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "dateFrom",
            "required": false,
            "in": "query",
            "description": "Date from which to filter adverts on, inclusive, takes into account `createdDate`, `updatedDate` and `signatureDate`.",
            "schema": { "type": "string" }
          },
          {
            "name": "dateTo",
            "required": false,
            "in": "query",
            "description": "Date to which to filter adverts on, inclusive, takes into account `createdDate`, `updatedDate` and `signatureDate`.",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Cases overview.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaseOverviewResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "The Official Journal of Iceland Admin API",
    "description": "Admin api for the Official Journal of Iceland. This API is used to manage the content of the Official Journal of Iceland.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CaseInstitution": {
        "type": "object",
        "properties": {
          "ssn": { "type": "string", "description": "SSN of the institution" },
          "name": { "type": "string", "description": "Name of the institution" }
        },
        "required": ["ssn", "name"]
      },
      "JournalAdvertDepartment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert department, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the advert department.",
            "example": "A deild"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the advert department, used in URLs and API requests.",
            "example": "a-deild"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "JournalAdvertType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert type, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the advert type, always uppercased.",
            "example": "AUGLÝSING"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the advert type, used in URLs and API requests.",
            "example": "auglysing"
          },
          "department": {
            "description": "Department the advert type belongs to.",
            "nullable": false,
            "allOf": [
              { "$ref": "#/components/schemas/JournalAdvertDepartment" }
            ]
          }
        },
        "required": ["id", "title", "slug", "department"]
      },
      "JournalAdvertPublicationNumber": {
        "type": "object",
        "properties": {
          "number": {
            "type": "number",
            "description": "Serial number of the publication number.",
            "example": "1"
          },
          "year": {
            "type": "number",
            "description": "Year of the publication number.",
            "example": "2024"
          },
          "full": {
            "type": "string",
            "description": "Full publication number, with both `number` and `year` separated with `/`.",
            "example": "1/2024"
          }
        },
        "required": ["number", "year", "full"]
      },
      "JournalAdvertMainCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the main category, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the main category.",
            "example": "Dómstólar og réttarfar"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the main category, used in URLs and API requests.",
            "example": "domstolar-og-rettarfar"
          },
          "description": {
            "type": "string",
            "description": "Description of the main category, used on front page.",
            "example": "Hæstiréttur, lögmenn, lögreglumál, dómsmál og landsdómur."
          }
        },
        "required": ["id", "title", "slug", "description"]
      },
      "JournalAdvertCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert category, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the advert category.",
            "example": "Evrópska efnahagssvæðið"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the advert category, used in URLs and API requests.",
            "example": "evropska-efnahagssvaedid"
          },
          "department": {
            "description": "The department the category belongs to.",
            "nullable": true,
            "example": "A deild",
            "allOf": [
              { "$ref": "#/components/schemas/JournalAdvertDepartment" }
            ]
          },
          "mainCategory": {
            "description": "The main category this category belongs to.",
            "nullable": true,
            "example": "Dómstólar og réttarfar",
            "allOf": [
              { "$ref": "#/components/schemas/JournalAdvertMainCategory" }
            ]
          }
        },
        "required": ["id", "title", "slug"]
      },
      "JournalAdvertInvolvedParty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the involved party, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the involved party.",
            "example": "Dómstólar og réttarfar"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the involved party, used in URLs and API requests.",
            "example": "domstolar-og-rettarfar"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "JournalDocument": {
        "type": "object",
        "properties": {
          "isLegacy": {
            "type": "boolean",
            "description": "Is the `html` from the legacy system?",
            "example": "false"
          },
          "html": {
            "type": "string",
            "description": "Full HTML for the advert, either generated by new system or legacy system based on `isLegacy`.",
            "example": "<html string>",
            "nullable": true
          },
          "pdfUrl": {
            "type": "string",
            "description": "URL for the generated PDF file.",
            "example": "<url>",
            "nullable": true
          }
        },
        "required": ["isLegacy", "html"]
      },
      "JournalSignatureMember": {
        "type": "object",
        "properties": {
          "isChairman": {
            "type": "boolean",
            "description": "Marks the members as chairman or not",
            "example": true,
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "Name of the committee chairman",
            "example": "Dagur B. Eggertsson"
          },
          "textAbove": {
            "type": "string",
            "description": "Text above the name of the signature",
            "example": "F.h.r",
            "nullable": true
          },
          "textAfter": {
            "type": "string",
            "description": "Text after the name of the signature",
            "example": "formaður",
            "nullable": true
          },
          "textBelow": {
            "type": "string",
            "description": "Text above the name of the signature",
            "example": "borgarstjóri",
            "nullable": true
          }
        },
        "required": ["isChairman", "name"]
      },
      "JournalSignatureData": {
        "type": "object",
        "properties": {
          "institution": {
            "type": "string",
            "description": "Institution of the signature",
            "example": "Reykjavíkurborg"
          },
          "date": {
            "type": "string",
            "description": "Date of the signature",
            "example": "2006-10-17 00:00:00.0000",
            "nullable": false
          },
          "members": {
            "description": "Members of the signature",
            "example": true,
            "nullable": false,
            "type": "array",
            "items": { "$ref": "#/components/schemas/JournalSignatureMember" }
          }
        },
        "required": ["institution", "date", "members"]
      },
      "JournalSignature": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the signature, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "advertId": {
            "type": "string",
            "description": "Advert ID",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "type": {
            "type": "string",
            "description": "Type of the signature",
            "enum": ["Hefðbundin", "Nefnd"],
            "example": "Hefðbundin"
          },
          "additional": {
            "type": "string",
            "description": "Optional addiational signature",
            "example": "Guðrún Jónsdóttir"
          },
          "data": {
            "description": "Signature data",
            "example": true,
            "nullable": false,
            "type": "array",
            "items": { "$ref": "#/components/schemas/JournalSignatureData" }
          }
        },
        "required": ["id", "advertId", "type", "data"]
      },
      "JournalAdvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "department": {
            "description": "The department the advert is for.",
            "nullable": false,
            "example": "A deild",
            "allOf": [
              { "$ref": "#/components/schemas/JournalAdvertDepartment" }
            ]
          },
          "type": {
            "description": "Type of the advert.",
            "example": "GJALDSKRÁ",
            "allOf": [{ "$ref": "#/components/schemas/JournalAdvertType" }]
          },
          "subject": {
            "type": "string",
            "description": "Subject of the advert, always dependant on the `type`.",
            "example": "fyrir hundahald í Reykjavíkurborg."
          },
          "title": {
            "type": "string",
            "description": "Title of the advert with both `type` and `subject`.",
            "example": "GJALDSKRÁ fyrir hundahald í Reykjavíkurborg."
          },
          "status": {
            "type": "string",
            "enum": [
              "Virk",
              "Afturkölluð",
              "Drög",
              "Eldri auglýsing",
              "Hafnað",
              "Í bið",
              "Í vinnslu",
              "Innsend",
              "Tilbúin til útgáfu",
              "Útgefin"
            ],
            "description": "Status of the advert",
            "nullable": false,
            "example": "Virk"
          },
          "publicationNumber": {
            "description": "Publication number of the advert",
            "nullable": true,
            "allOf": [
              { "$ref": "#/components/schemas/JournalAdvertPublicationNumber" }
            ]
          },
          "createdDate": {
            "type": "string",
            "description": "Date the advert was created. ISO 8601 date and time format in UTC.",
            "nullable": false,
            "example": "2024-01-01T09:00:00Z"
          },
          "updatedDate": {
            "type": "string",
            "description": "Date the advert was last updated. ISO 8601 date and time format in UTC.",
            "nullable": false,
            "example": "2024-01-20T09:00:00Z"
          },
          "signatureDate": {
            "type": "string",
            "description": "Date the advert was signed, can be null. ISO 8601 date and time format in UTC.",
            "nullable": true,
            "example": "2024-01-10T16:00:00Z"
          },
          "publicationDate": {
            "type": "string",
            "description": "Date the advert was signed, can be null. ISO 8601 date and time format in UTC.",
            "nullable": true,
            "example": "2024-01-20T09:00:00Z"
          },
          "categories": {
            "description": "List of advert categories.",
            "nullable": false,
            "type": "array",
            "items": { "$ref": "#/components/schemas/JournalAdvertCategory" }
          },
          "involvedParty": {
            "description": "Involved party for the advert.",
            "nullable": false,
            "allOf": [
              { "$ref": "#/components/schemas/JournalAdvertInvolvedParty" }
            ]
          },
          "document": {
            "description": "Advert document in different formats.",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/JournalDocument" }]
          },
          "signature": {
            "description": "Signatures for the advert.",
            "allOf": [{ "$ref": "#/components/schemas/JournalSignature" }]
          }
        },
        "required": [
          "id",
          "department",
          "type",
          "title",
          "status",
          "publicationNumber",
          "createdDate",
          "updatedDate",
          "signatureDate",
          "publicationDate",
          "categories",
          "involvedParty",
          "document",
          "signature"
        ]
      },
      "CaseCommentTask": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "From who or what initied the task, used by client to show who inited the task.",
            "example": "Ármann"
          },
          "to": {
            "type": "string",
            "description": "To whom or what the task is assigned to.",
            "example": "Pálina J"
          },
          "title": {
            "type": "string",
            "example": "gerir athugasemd",
            "description": "The task title"
          },
          "comment": {
            "type": "string",
            "description": "The comment itself",
            "example": "Pálína, getur þú tekið við og staðfest að upplýsingarnar séu réttar?"
          }
        },
        "required": ["from", "to", "title", "comment"]
      },
      "CaseComment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851",
            "description": "Id of the case comment."
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of the comment, ISO 8601 format, UTC time format.",
            "example": "2024-01-01T09:00:00Z"
          },
          "type": {
            "type": "string",
            "enum": ["submit", "assign", "update", "comment"],
            "example": "comment",
            "description": "Type of the case task."
          },
          "task": {
            "example": {
              "from": "Ármann",
              "to": null,
              "title": "gerir athugasemd",
              "comment": "Pálína, getur\n      þú tekið við og staðfest að upplýsingarnar séu réttar?"
            },
            "description": "The task itself",
            "allOf": [{ "$ref": "#/components/schemas/CaseCommentTask" }]
          }
        },
        "required": ["id", "createdAt", "type", "task"]
      },
      "Case": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "applicationId": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851",
            "description": "Id of the submitted application, default to null on older cases."
          },
          "year": {
            "type": "string",
            "example": 2024,
            "description": "Year the case was created."
          },
          "caseNumber": {
            "type": "string",
            "example": "01905",
            "description": "Case number (numeric string) gets generated automatically when a case is created."
          },
          "status": {
            "type": "string",
            "enum": ["Innsent", "Grunnvinnsla", "Yfirlestur", "Tilbúið"],
            "example": "Innsent",
            "description": "Status of the case, default to \"Innsent\""
          },
          "tag": {
            "type": "string",
            "enum": ["Ekki hafið", "Í yfirlestri", "Samlesin", "Þarf skoðun"],
            "example": "Ekki hafið",
            "description": "Internal tag for the case, default to null"
          },
          "createdAt": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Date the case was created. ISO 8601 date and time format in UTC."
          },
          "modifiedAt": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Date when the case was last updated. ISO 8601 date and time format in UTC."
          },
          "assignedTo": {
            "type": "string",
            "example": "0102030000",
            "description": "Someway of identifying the employee (employeeId?), defaults to null."
          },
          "insititution": {
            "description": "The institution that owns the case.",
            "example": { "ssn": "0102030000", "name": "Forsætisráðuneytið" },
            "allOf": [{ "$ref": "#/components/schemas/CaseInstitution" }]
          },
          "advert": {
            "description": "The advert that is associated with the case.",
            "allOf": [{ "$ref": "#/components/schemas/JournalAdvert" }]
          },
          "fastTrack": {
            "type": "boolean",
            "example": false,
            "description": "Requested fast track"
          },
          "published": {
            "type": "boolean",
            "example": false,
            "description": "Is the case published."
          },
          "publishedAt": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Date the case was published. ISO 8601 date and time format in UTC."
          },
          "price": {
            "type": "number",
            "example": 23000,
            "description": "The cost of the case."
          },
          "paid": {
            "type": "boolean",
            "example": false,
            "description": "Is the case paid for."
          },
          "comments": {
            "description": "Comments on the case.",
            "example": {
              "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
              "createdAt": "2024-01-01T09:00:00Z",
              "type": "Comment",
              "task": {
                "from": "Ármann",
                "to": null,
                "title": "gerir athugasemd",
                "comment": "Pálína, getur þú tekið við og staðfest að upplýsingarnar séu réttar?"
              }
            },
            "type": "array",
            "items": { "$ref": "#/components/schemas/CaseComment" }
          }
        },
        "required": [
          "id",
          "applicationId",
          "year",
          "caseNumber",
          "status",
          "tag",
          "createdAt",
          "modifiedAt",
          "assignedTo",
          "insititution",
          "advert",
          "fastTrack",
          "published",
          "publishedAt",
          "price",
          "paid",
          "comments"
        ]
      },
      "Paging": {
        "type": "object",
        "properties": {
          "page": { "type": "number", "example": 1 },
          "totalPages": { "type": "number", "example": 10 },
          "totalItems": { "type": "number", "example": 1000 },
          "nextPage": { "type": "number", "example": 2, "nullable": true },
          "previousPage": { "type": "number", "example": 1, "nullable": true },
          "pageSize": {
            "type": "number",
            "example": 10,
            "minimum": 1,
            "maximum": 100
          },
          "hasNextPage": { "type": "boolean", "example": true },
          "hasPreviousPage": { "type": "boolean", "example": false }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "nextPage",
          "previousPage",
          "pageSize",
          "hasNextPage",
          "hasPreviousPage"
        ]
      },
      "CasesReponse": {
        "type": "object",
        "properties": {
          "cases": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Case" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["cases", "paging"]
      },
      "CaseOverviewTotalItems": {
        "type": "object",
        "properties": {
          "submitted": {
            "type": "number",
            "description": "Total submitted cases",
            "example": 7
          },
          "inProgress": {
            "type": "number",
            "description": "Total in progress cases",
            "example": 3
          },
          "inReview": {
            "type": "number",
            "description": "Total in review cases",
            "example": 2
          },
          "ready": {
            "type": "number",
            "description": "Total ready cases",
            "example": 1
          }
        },
        "required": ["submitted", "inProgress", "inReview", "ready"]
      },
      "CaseOverviewResponse": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Cases for selected tab",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Case" }
          },
          "totalItems": {
            "description": "Total cases for each status",
            "allOf": [{ "$ref": "#/components/schemas/CaseOverviewTotalItems" }]
          },
          "paging": {
            "description": "Paging information",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["data", "totalItems", "paging"]
      }
    }
  }
}
