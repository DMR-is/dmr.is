{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/categories/main-categories/{id}": {
      "delete": {
        "operationId": "deleteMainCategory",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      },
      "put": {
        "operationId": "updateMainCategory",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateMainCategory" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/categories/main-categories/{mainCategoryId}/categories/{categoryId}": {
      "delete": {
        "operationId": "deleteMainCategoryCategory",
        "summary": "",
        "parameters": [
          {
            "name": "mainCategoryId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "categoryId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/categories/main-categories": {
      "post": {
        "operationId": "createMainCategory",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateMainCategory" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/categories/categories": {
      "post": {
        "operationId": "createCategory",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCategory" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/categories/categories/{id}": {
      "put": {
        "operationId": "updateCategory",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCategory" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "deleteCategory",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/categories/main-categories/{mainCategoryId}/categories": {
      "post": {
        "operationId": "createMainCategoryCategories",
        "summary": "",
        "parameters": [
          {
            "name": "mainCategoryId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMainCategoryCategories"
              }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/types/main": {
      "post": {
        "operationId": "createMainType",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdvertMainTypeBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertMainType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/types/main/bulk": {
      "post": {
        "operationId": "createMainTypesBulk",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdvertMainTypeBulk"
              }
            }
          }
        },
        "responses": {
          "201": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/types/main/{id}": {
      "put": {
        "operationId": "updateMainType",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateAdvertMainType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertMainType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "deleteMainType",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/types/{id}": {
      "put": {
        "operationId": "updateType",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateAdvertTypeBody" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "deleteType",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "getTypeById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/types": {
      "post": {
        "operationId": "createType",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateAdvertTypeBody" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "getTypes",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": false,
            "in": "query",
            "description": "Search by id",
            "schema": { "type": "string" }
          },
          {
            "name": "unassigned",
            "required": false,
            "in": "query",
            "description": "Filter by unassigned",
            "schema": { "type": "boolean" }
          },
          {
            "name": "mainType",
            "required": false,
            "in": "query",
            "description": "Search by main type id",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search by title",
            "schema": { "type": "string" }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "description": "Search by slug",
            "schema": { "type": "string" }
          },
          {
            "name": "department",
            "required": false,
            "in": "query",
            "description": "Search by department slug, title or id",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "The page number",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The page size",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertTypes" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/institutions": {
      "post": {
        "operationId": "createInstitution",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateInstitution" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetInstitution" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "getInstitutions",
        "summary": "",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "example": 10,
            "schema": { "type": "number" }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "String to search for in institutions.",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetInstitutions" }
              }
            }
          }
        }
      }
    },
    "/api/v1/institutions/{id}": {
      "put": {
        "operationId": "updateInstitution",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateInstitution" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetInstitution" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "deleteInstitution",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "getInstitution",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetInstitution" }
              }
            }
          }
        }
      }
    },
    "/api/v1/cases/{id}": {
      "get": {
        "operationId": "getCase",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetCaseResponse" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases": {
      "get": {
        "operationId": "getCases",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "applicationId",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "year",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Id, title or slug of the statuses",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "department",
            "required": false,
            "in": "query",
            "description": "Id, title or slug of the departments",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Id, title or slug of the types",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "description": "Id, title or slug of the categories",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "employeeId",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "published",
            "required": false,
            "in": "query",
            "schema": { "type": "boolean" }
          },
          {
            "name": "fastTrack",
            "required": false,
            "in": "query",
            "schema": { "type": "boolean" }
          },
          {
            "name": "institution",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "fromDate",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "toDate",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "example": 10,
            "schema": { "type": "number" }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "sortBy",
            "schema": { "type": "string" }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "example": "ASC",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetCasesReponse" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "post": {
        "operationId": "createCase",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCaseDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCaseResponseDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/users": {
      "get": {
        "operationId": "getUsers",
        "summary": "",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "example": 10,
            "schema": { "type": "number" }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "involvedParty",
            "required": false,
            "in": "query",
            "description": "Slug of the institution",
            "schema": { "type": "string" }
          },
          {
            "name": "role",
            "required": false,
            "in": "query",
            "description": "Slug of the role",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetUsersResponse" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenException" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "post": {
        "operationId": "createUser",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUserDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetUserResponse" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenException" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/users/{id}": {
      "put": {
        "operationId": "updateUser",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetUserResponse" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenException" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "deleteUser",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenException" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/users/nationalId/{nationalId}": {
      "get": {
        "operationId": "getUserByNationalId",
        "summary": "",
        "parameters": [
          {
            "name": "nationalId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetUserResponse" }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenException" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/users/roles": {
      "get": {
        "operationId": "getRolesByUser",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRolesByUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenException" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/users/involved-parties": {
      "get": {
        "operationId": "getInvolvedPartiesByUser",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoledPartiesByUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenException" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/health": {
      "get": {
        "operationId": "HealthController_",
        "parameters": [],
        "responses": { "200": { "description": "Health check endpoint." } }
      }
    },
    "/api/v1/cases/feeCodes": {
      "get": {
        "operationId": "getFeeCodes",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionFeeCodesResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/status-count/{status}": {
      "get": {
        "operationId": "getCasesWithStatusCount",
        "summary": "",
        "parameters": [
          {
            "name": "statuses",
            "required": false,
            "in": "query",
            "description": "Statuses to be counted",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/CaseStatusEnum" }
            }
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "applicationId",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "year",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "department",
            "required": false,
            "in": "query",
            "description": "Id, title or slug of the departments",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Id, title or slug of the types",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "description": "Id, title or slug of the categories",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "employeeId",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "published",
            "required": false,
            "in": "query",
            "schema": { "type": "boolean" }
          },
          {
            "name": "fastTrack",
            "required": false,
            "in": "query",
            "schema": { "type": "boolean" }
          },
          {
            "name": "institution",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "fromDate",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "toDate",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "example": 10,
            "schema": { "type": "number" }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "sortBy",
            "schema": { "type": "string" }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "example": "ASC",
            "schema": { "type": "string" }
          },
          {
            "name": "status",
            "required": true,
            "in": "path",
            "schema": { "$ref": "#/components/schemas/CaseStatusEnum" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCasesWithStatusCount"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{caseId}/attachments/{attachmentId}": {
      "get": {
        "operationId": "getCaseAttachment",
        "summary": "",
        "parameters": [
          {
            "name": "caseId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "attachmentId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresignedUrlResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "put": {
        "operationId": "overwriteCaseAttachment",
        "summary": "",
        "parameters": [
          {
            "name": "caseId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "attachmentId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostApplicationAttachmentBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresignedUrlResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/status/next": {
      "put": {
        "operationId": "updateNextStatus",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/status/previous": {
      "put": {
        "operationId": "updatePreviousStatus",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/update": {
      "put": {
        "operationId": "updateCaseAndAddCorrection",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdvertHtmlCorrection"
              }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/html": {
      "put": {
        "operationId": "updateAdvertHtml",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateAdvertHtmlBody" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/department-count/{department}": {
      "get": {
        "operationId": "getCasesWithDepartmentCount",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "applicationId",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "year",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Id, title or slug of the statuses",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Id, title or slug of the types",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "description": "Id, title or slug of the categories",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "employeeId",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "published",
            "required": false,
            "in": "query",
            "schema": { "type": "boolean" }
          },
          {
            "name": "fastTrack",
            "required": false,
            "in": "query",
            "schema": { "type": "boolean" }
          },
          {
            "name": "institution",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "fromDate",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "toDate",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "example": 10,
            "schema": { "type": "number" }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "sortBy",
            "schema": { "type": "string" }
          },
          {
            "name": "direction",
            "required": false,
            "in": "query",
            "example": "ASC",
            "schema": { "type": "string" }
          },
          {
            "name": "department",
            "required": true,
            "in": "path",
            "schema": { "$ref": "#/components/schemas/DepartmentEnum" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCasesWithDepartmentCount"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/publish": {
      "post": {
        "operationId": "publish",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PostCasePublishBody" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/reject": {
      "post": {
        "operationId": "rejectCase",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/comments/v2": {
      "get": {
        "operationId": "getComments",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetComments" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/comments/v2/internal": {
      "post": {
        "operationId": "createInternalComment",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InternalCommentBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetComment" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/comments/v2/external": {
      "post": {
        "operationId": "createExternalComment",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalCommentBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetComment" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/comments/{commentId}": {
      "delete": {
        "operationId": "deleteComment",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "commentId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/with-publication-number/{department}": {
      "get": {
        "operationId": "getCasesWithPublicationNumber",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "department",
            "required": true,
            "in": "path",
            "schema": { "$ref": "#/components/schemas/DepartmentEnum" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCasesWithPublicationNumber"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{caseId}/upload-assets": {
      "post": {
        "operationId": "uploadApplicationAttachment",
        "summary": "",
        "parameters": [
          {
            "name": "caseId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostApplicationAssetBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresignedUrlResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/advert-correction/case/{caseId}/correction": {
      "post": {
        "operationId": "postCorrection",
        "summary": "",
        "parameters": [
          {
            "name": "caseId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCaseAdvertCorrection"
              }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/adverts/rss/{id}": {
      "get": {
        "operationId": "getRssFeed",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } }
      }
    },
    "/api/v1/adverts/similar/{id}": {
      "get": {
        "operationId": "getSimilarAdvertsById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSimilarAdvertsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/adverts/{id}": {
      "get": {
        "operationId": "getAdvertById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/adverts": {
      "get": {
        "operationId": "getAdverts",
        "summary": "",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "String to search for in adverts.",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number to return.",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "Page size to return.",
            "schema": { "type": "number" }
          },
          {
            "name": "department",
            "required": false,
            "in": "query",
            "description": "One or more departments (by `slug`) to filter on.",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "One or more types (by `slug`) to filter on.",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "description": "One or more categories (by `slug`) to filter on.",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "involvedParty",
            "required": false,
            "in": "query",
            "description": "One or more involved parties (by `slug`) to filter on.",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "dateFrom",
            "required": false,
            "in": "query",
            "description": "Date from which to filter adverts on, inclusive, takes into account `createdDate`, `updatedDate` and `signatureDate`.",
            "schema": { "type": "string" }
          },
          {
            "name": "dateTo",
            "required": false,
            "in": "query",
            "description": "Date to which to filter adverts on, inclusive, takes into account `createdDate`, `updatedDate` and `signatureDate`.",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertsResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/case/{id}": {
      "get": {
        "operationId": "getPdfByCaseId",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfRespone" }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/application/{id}": {
      "get": {
        "operationId": "getPdfByApplicationId",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "showDate",
            "required": false,
            "in": "query",
            "description": "Show date in PDF",
            "schema": { "default": true, "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfRespone" }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/case/{id}/url": {
      "get": {
        "operationId": "getPdfUrlByCaseId",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfUrlResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/application/{id}/url": {
      "get": {
        "operationId": "getPdfUrlByApplicationId",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfUrlResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/types/main-types/{id}": {
      "get": {
        "operationId": "getMainTypeById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertMainType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/types/main-types": {
      "get": {
        "operationId": "getMainTypes",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": false,
            "in": "query",
            "description": "Search by id",
            "schema": { "type": "string" }
          },
          {
            "name": "unassigned",
            "required": false,
            "in": "query",
            "description": "Filter by unassigned",
            "schema": { "type": "boolean" }
          },
          {
            "name": "mainType",
            "required": false,
            "in": "query",
            "description": "Search by main type id",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search by title",
            "schema": { "type": "string" }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "description": "Search by slug",
            "schema": { "type": "string" }
          },
          {
            "name": "department",
            "required": false,
            "in": "query",
            "description": "Search by department slug, title or id",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "The page number",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "The page size",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertMainTypes" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/department/{slug}": {
      "get": {
        "operationId": "getStatisticsForDepartment",
        "summary": "",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatisticsDepartmentResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/overview/dashboard": {
      "get": {
        "operationId": "getStatisticsOverviewDashboard",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatisticOverviewDashboardResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/overview/{type}": {
      "get": {
        "operationId": "getStatisticsOverview",
        "summary": "",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/StatisticsOverviewQueryType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatisticsOverviewResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/categories/main": {
      "get": {
        "operationId": "getMainCategories",
        "summary": "",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "String to search for",
            "schema": { "type": "string" }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "default": [],
              "type": "array",
              "items": { "type": "string" }
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number to return.",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "Page size number to return.",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainCategoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories": {
      "get": {
        "operationId": "getCategories",
        "summary": "",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "String to search for",
            "schema": { "type": "string" }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "default": [],
              "type": "array",
              "items": { "type": "string" }
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number to return.",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "Page size number to return.",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments/{id}": {
      "get": {
        "operationId": "getDepartmentById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDepartmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments": {
      "get": {
        "operationId": "getDepartments",
        "summary": "",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "String to search for in departments.",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number to return.",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "Page size number to return.",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDepartmentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/communication-channels/{caseId}": {
      "post": {
        "operationId": "createCommunicationChannel",
        "summary": "",
        "parameters": [
          {
            "name": "caseId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCaseChannelBody" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CaseChannel" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/communication-channels/{caseId}/{channelId}": {
      "delete": {
        "operationId": "deleteCommunicationChannel",
        "summary": "",
        "parameters": [
          {
            "name": "caseId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "channelId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/communication-statuses": {
      "get": {
        "operationId": "getCommunicationStatuses",
        "summary": "",
        "parameters": [],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommunicationSatusesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tags": {
      "get": {
        "operationId": "getTags",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetTagsResponse" }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "The Official Journal of Iceland Admin API",
    "description": "Admin api for the Official Journal of Iceland. This API is used to manage the content of the Official Journal of Iceland.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" }
    },
    "schemas": {
      "CreateMainCategory": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the main category."
          },
          "description": {
            "type": "string",
            "description": "Description of the main category"
          },
          "departmentId": { "type": "string" },
          "categories": {
            "description": "Sub categories under this main category",
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": ["title", "description", "departmentId", "categories"]
      },
      "CreateCategory": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the main category."
          }
        },
        "required": ["title"]
      },
      "UpdateCategory": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the main category."
          }
        }
      },
      "CreateMainCategoryCategories": {
        "type": "object",
        "properties": {
          "categories": {
            "description": "Sub categories under this main category",
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": ["categories"]
      },
      "UpdateMainCategory": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the main category."
          },
          "description": {
            "type": "string",
            "description": "Description of the main category"
          },
          "departmentId": { "type": "string" }
        }
      },
      "CreateAdvertMainTypeBody": {
        "type": "object",
        "properties": {
          "departmentId": {
            "type": "string",
            "description": "The department id"
          },
          "title": {
            "type": "string",
            "description": "The title of the main advert type"
          }
        },
        "required": ["departmentId", "title"]
      },
      "BaseEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of the entity" },
          "title": { "type": "string", "description": "Title of the entity" },
          "slug": { "type": "string", "description": "Slug of the entity" }
        },
        "required": ["id", "title", "slug"]
      },
      "AdvertType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the main advert type"
          },
          "title": {
            "type": "string",
            "description": "The title of the main advert type"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the main advert type"
          },
          "department": {
            "description": "The department of the main advert type",
            "allOf": [{ "$ref": "#/components/schemas/BaseEntity" }]
          }
        },
        "required": ["id", "title", "slug", "department"]
      },
      "AdvertMainType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the main advert type"
          },
          "title": {
            "type": "string",
            "description": "The title of the main advert type"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the main advert type"
          },
          "department": {
            "description": "The department this main type belongs to",
            "allOf": [{ "$ref": "#/components/schemas/BaseEntity" }]
          },
          "types": {
            "description": "All types under this main type",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertType" }
          }
        },
        "required": ["id", "title", "slug", "department", "types"]
      },
      "GetAdvertMainType": {
        "type": "object",
        "properties": {
          "mainType": {
            "description": "The main advert type",
            "allOf": [{ "$ref": "#/components/schemas/AdvertMainType" }]
          }
        },
        "required": ["mainType"]
      },
      "AdvertTypeError": {
        "type": "object",
        "properties": {
          "errorType": {
            "type": "string",
            "enum": ["DuplicateError", "ValidationError", "NotFoundError"]
          },
          "name": { "type": "string" },
          "message": { "type": "string" },
          "severity": { "type": "string", "enum": ["info", "warning", "error"] }
        },
        "required": ["errorType", "name", "message", "severity"]
      },
      "CreateAdvertMainTypeBulk": {
        "type": "object",
        "properties": {
          "mainTypes": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CreateAdvertMainTypeBody" }
          }
        },
        "required": ["mainTypes"]
      },
      "UpdateAdvertMainType": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "New title of the main advert type"
          }
        }
      },
      "UpdateAdvertTypeBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "New title of the advert type"
          },
          "mainTypeId": { "type": "string" }
        },
        "required": ["mainTypeId"]
      },
      "GetAdvertType": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The advert type",
            "allOf": [{ "$ref": "#/components/schemas/AdvertType" }]
          }
        },
        "required": ["type"]
      },
      "CreateAdvertTypeBody": {
        "type": "object",
        "properties": {
          "mainTypeId": {
            "type": "string",
            "description": "Id of the main type"
          },
          "departmentId": {
            "type": "string",
            "description": "Id of the department"
          },
          "title": {
            "type": "string",
            "description": "Name of the advert type"
          }
        },
        "required": ["departmentId", "title"]
      },
      "CreateInstitution": {
        "type": "object",
        "properties": {
          "title": { "type": "string", "description": "Title of the entity" },
          "nationalId": { "type": "string" }
        },
        "required": ["title", "nationalId"]
      },
      "InstitutionDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of the entity" },
          "title": { "type": "string", "description": "Title of the entity" },
          "slug": { "type": "string", "description": "Slug of the entity" },
          "nationalId": {
            "type": "string",
            "description": "National ID of the institution"
          }
        },
        "required": ["id", "title", "slug", "nationalId"]
      },
      "GetInstitution": {
        "type": "object",
        "properties": {
          "institution": {
            "description": "The institution that was found",
            "allOf": [{ "$ref": "#/components/schemas/InstitutionDto" }]
          }
        },
        "required": ["institution"]
      },
      "UpdateInstitution": {
        "type": "object",
        "properties": {
          "title": { "type": "string", "description": "Title of the entity" },
          "nationalId": { "type": "string" }
        }
      },
      "CaseStatusEnum": {
        "type": "string",
        "description": "Status of the case",
        "enum": [
          "Innsent",
          "Grunnvinnsla",
          "Yfirlestur",
          "Tilbúið",
          "Útgefið",
          "Tekið úr birtingu",
          "Birtingu hafnað"
        ]
      },
      "CaseStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "title": {
            "example": "Innsent",
            "$ref": "#/components/schemas/CaseStatusEnum"
          },
          "slug": {
            "type": "string",
            "example": "innsent",
            "description": "Slug of the case staus"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "CaseTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the case tag",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "enum": ["Ekki hafið", "Í yfirlestri", "Samlesin", "Þarf skoðun"],
            "description": "Title of the case tag",
            "example": "Í yfirlestri"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the case tag",
            "example": "i-yfirlestri"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "UserRoleDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of the entity" },
          "title": { "type": "string", "description": "Title of the entity" },
          "slug": { "type": "string", "description": "Slug of the entity" }
        },
        "required": ["id", "title", "slug"]
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "nationalId": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "fullName": { "type": "string" },
          "email": { "type": "string" },
          "displayName": { "type": "string" },
          "involvedParties": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/InstitutionDto" }
          },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" },
          "deletedAt": { "type": "string", "nullable": true },
          "role": { "$ref": "#/components/schemas/UserRoleDto" }
        },
        "required": [
          "id",
          "nationalId",
          "firstName",
          "lastName",
          "fullName",
          "email",
          "displayName",
          "involvedParties",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "role"
        ]
      },
      "CommunicationStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the communication status"
          },
          "title": {
            "type": "string",
            "enum": [
              "Ekki hafin",
              "Beðið eftir svörum",
              "Svör hafa borist",
              "Lokið"
            ],
            "description": "The title of the communication status"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the communication status"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "Department": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert department, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the advert department.",
            "example": "A deild"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the advert department, used in URLs and API requests.",
            "example": "a-deild"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of the entity" },
          "title": { "type": "string", "description": "Title of the entity" },
          "slug": { "type": "string", "description": "Slug of the entity" }
        },
        "required": ["id", "title", "slug"]
      },
      "TBRTransaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "externalReference": {
            "type": "string",
            "description": "Reference to external source"
          },
          "imageTier": { "type": "string", "description": "Image tier code" },
          "price": { "type": "number", "description": "Advert price" },
          "subject": {
            "type": "string",
            "description": "Advert subject (Viðfang)."
          },
          "feeCodes": {
            "nullable": true,
            "description": "Fee codes to get the price for",
            "type": "array",
            "items": { "type": "string" }
          },
          "customBaseCount": {
            "type": "number",
            "description": "How many base units are there"
          },
          "customAdditionalDocCount": {
            "type": "number",
            "description": "How many additional documents are there"
          },
          "extraWorkCount": {
            "type": "number",
            "description": "How much extra work is there, in percentage"
          },
          "customAdditionalCharacterCount": {
            "type": "number",
            "description": "Custom additional character count"
          }
        },
        "required": ["id", "externalReference", "imageTier"]
      },
      "CaseChannel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851",
            "description": "Id of the case channel."
          },
          "name": {
            "type": "string",
            "example": "Case channel name",
            "description": "Name of the case channel."
          },
          "email": {
            "type": "string",
            "example": "hjalp@dmr.is",
            "description": "Email of the case channel."
          },
          "phone": {
            "type": "string",
            "example": "+354 123 4567",
            "description": "Phone of the case channel."
          }
        },
        "required": ["id", "name", "email"]
      },
      "CaseActionEnum": {
        "type": "string",
        "description": "The action that created the comment",
        "enum": [
          "SUBMIT",
          "ASSIGN_USER",
          "ASSIGN_SELF",
          "UPDATE_STATUS",
          "INTERNAL_COMMENT",
          "EXTERNAL_COMMENT",
          "APPLICATION_COMMENT"
        ]
      },
      "CommentCreatorDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of the entity" },
          "title": { "type": "string", "description": "Title of the entity" }
        },
        "required": ["id", "title"]
      },
      "CommentReceiverDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of the entity" },
          "title": { "type": "string", "description": "Title of the entity" }
        },
        "required": ["id", "title"]
      },
      "CommentDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "The id of the comment" },
          "created": {
            "type": "string",
            "description": "ISO string representation of the date the comment was created"
          },
          "action": { "$ref": "#/components/schemas/CaseActionEnum" },
          "caseStatus": {
            "description": "The status of the case when the comment was created",
            "allOf": [{ "$ref": "#/components/schemas/CaseStatus" }]
          },
          "creator": {
            "description": "The creator of the comment",
            "allOf": [{ "$ref": "#/components/schemas/CommentCreatorDto" }]
          },
          "receiver": {
            "nullable": true,
            "description": "The receiver of the comment",
            "allOf": [{ "$ref": "#/components/schemas/CommentReceiverDto" }]
          },
          "comment": {
            "type": "string",
            "description": "The comment",
            "nullable": true
          }
        },
        "required": [
          "id",
          "created",
          "action",
          "caseStatus",
          "creator",
          "receiver",
          "comment"
        ]
      },
      "SignatureMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the signature member"
          },
          "name": {
            "type": "string",
            "description": "The name/title/w.e. of the signature member"
          },
          "textAbove": {
            "type": "string",
            "nullable": true,
            "description": "The text comes above the signature name"
          },
          "textBefore": {
            "type": "string",
            "nullable": true,
            "description": "The text that comes before the signature name"
          },
          "textBelow": {
            "type": "string",
            "nullable": true,
            "description": "The text that comes below the signature name"
          },
          "textAfter": {
            "type": "string",
            "nullable": true,
            "description": "The text that comes after the signature name"
          }
        },
        "required": [
          "id",
          "name",
          "textAbove",
          "textBefore",
          "textBelow",
          "textAfter"
        ]
      },
      "SignatureRecord": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "institution": { "type": "string" },
          "signatureDate": { "type": "string" },
          "additional": { "type": "string", "nullable": true },
          "chairman": {
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/SignatureMember" }]
          },
          "members": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SignatureMember" }
          }
        },
        "required": [
          "id",
          "institution",
          "signatureDate",
          "additional",
          "chairman",
          "members"
        ]
      },
      "Signature": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "The id of the signature" },
          "signatureDate": {
            "type": "string",
            "description": "ISO datestring of the signature"
          },
          "involvedParty": {
            "description": "The involved party of the signature",
            "allOf": [{ "$ref": "#/components/schemas/InstitutionDto" }]
          },
          "html": { "type": "string", "description": "HTML of the signature" },
          "created": {
            "type": "string",
            "description": "ISO datestring of the creation date"
          },
          "records": {
            "description": "The signature record",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SignatureRecord" }
          }
        },
        "required": [
          "id",
          "signatureDate",
          "involvedParty",
          "html",
          "created",
          "records"
        ]
      },
      "ApplicationAttachmentType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the attachment type"
          },
          "title": {
            "type": "string",
            "enum": ["Frumrit", "Fylgiskjöl"],
            "description": "Title of the attachment type"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the attachment type"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "ApplicationAttachment": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of the attachment" },
          "applicationId": {
            "type": "string",
            "description": "Id of the application"
          },
          "originalFileName": {
            "type": "string",
            "description": "Original file name"
          },
          "fileName": { "type": "string", "description": "File name" },
          "fileFormat": { "type": "string", "description": "File format" },
          "fileExtension": {
            "type": "string",
            "description": "File extension"
          },
          "fileSize": { "type": "number", "description": "File size" },
          "fileLocation": { "type": "string", "description": "File location" },
          "type": {
            "description": "Attachment type",
            "allOf": [
              { "$ref": "#/components/schemas/ApplicationAttachmentType" }
            ]
          },
          "deleted": { "type": "boolean", "description": "Deleted" }
        },
        "required": [
          "id",
          "applicationId",
          "originalFileName",
          "fileName",
          "fileFormat",
          "fileExtension",
          "fileSize",
          "fileLocation",
          "type",
          "deleted"
        ]
      },
      "CaseAddition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "title": { "type": "string", "description": "Title of the addition" },
          "html": { "type": "string", "description": "HTML of the addition" }
        },
        "required": ["id", "title", "html"]
      },
      "AdvertCorrection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "title": {
            "type": "string",
            "description": "Title of the correction"
          },
          "description": {
            "type": "string",
            "description": "The correction description"
          },
          "advertId": {
            "type": "string",
            "description": "Id of the advert being corrected"
          },
          "documentHtml": { "type": "string" },
          "documentPdfUrl": { "type": "string" },
          "isLegacy": { "type": "boolean" },
          "legacyDate": {
            "type": "string",
            "nullable": true,
            "example": "2024-01-01T09:00:00Z"
          },
          "createdDate": {
            "type": "string",
            "nullable": false,
            "example": "2024-01-01T09:00:00Z"
          },
          "updatedDate": {
            "type": "string",
            "nullable": false,
            "example": "2024-01-20T09:00:00Z"
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "advertId",
          "createdDate",
          "updatedDate"
        ]
      },
      "HistoryDepartment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert department, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the advert department.",
            "example": "A deild"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the advert department, used in URLs and API requests.",
            "example": "a-deild"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "HistoryType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the main advert type"
          },
          "title": {
            "type": "string",
            "description": "The title of the main advert type"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the main advert type"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "HistoryStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "title": {
            "example": "Innsent",
            "$ref": "#/components/schemas/CaseStatusEnum"
          },
          "slug": {
            "type": "string",
            "example": "innsent",
            "description": "Slug of the case staus"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "HistoryInstition": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of the entity" },
          "title": { "type": "string", "description": "Title of the entity" },
          "slug": { "type": "string", "description": "Slug of the entity" }
        },
        "required": ["id", "title", "slug"]
      },
      "HistoryEmployee": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "displayName": { "type": "string" }
        },
        "required": ["id", "displayName"]
      },
      "CaseHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the history record."
          },
          "caseId": {
            "type": "string",
            "description": "Id of the case the history record is related to."
          },
          "department": {
            "description": "Department the case was submitted to.",
            "allOf": [{ "$ref": "#/components/schemas/HistoryDepartment" }]
          },
          "type": {
            "description": "Type of the advert the case is related to.",
            "allOf": [{ "$ref": "#/components/schemas/HistoryType" }]
          },
          "status": {
            "description": "Status of the case.",
            "allOf": [{ "$ref": "#/components/schemas/HistoryStatus" }]
          },
          "institution": {
            "description": "Institution the case was submitted to.",
            "allOf": [{ "$ref": "#/components/schemas/HistoryInstition" }]
          },
          "assignedTo": {
            "description": "Employee the case was assigned to.",
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/HistoryEmployee" }]
          },
          "title": { "type": "string", "description": "Title of the advert" },
          "html": { "type": "string", "description": "HTML of the advert" },
          "requestedPublicationDate": {
            "type": "string",
            "description": "Requested publication date of the advert",
            "nullable": true
          },
          "created": {
            "type": "string",
            "description": "ISO representation of the date the case was created."
          }
        },
        "required": [
          "id",
          "caseId",
          "department",
          "type",
          "status",
          "institution",
          "assignedTo",
          "title",
          "html",
          "requestedPublicationDate",
          "created"
        ]
      },
      "CaseDetailed": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "advertId": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851",
            "description": "Id of the advert the case is related to.",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851",
            "description": "Id of the submitted application, default to null on older cases."
          },
          "year": {
            "type": "number",
            "example": 2024,
            "description": "Year the case was created."
          },
          "caseNumber": {
            "type": "string",
            "example": 190,
            "description": "Case number (numeric string) gets generated automatically when a case is created."
          },
          "status": {
            "description": "Status of the case, default to \"Innsent\"",
            "allOf": [{ "$ref": "#/components/schemas/CaseStatus" }]
          },
          "tag": {
            "description": "Internal tag for the case, default to null",
            "allOf": [{ "$ref": "#/components/schemas/CaseTag" }]
          },
          "involvedParty": {
            "description": "Involved party of the case.",
            "allOf": [{ "$ref": "#/components/schemas/InstitutionDto" }]
          },
          "createdAt": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Date the case was created. ISO 8601 date and time format in UTC."
          },
          "modifiedAt": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Date when the case was last updated. ISO 8601 date and time format in UTC."
          },
          "isLegacy": {
            "type": "boolean",
            "example": false,
            "description": "Is legacy case."
          },
          "assignedTo": {
            "description": "User the case is assigned to.",
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/UserDto" }]
          },
          "communicationStatus": {
            "description": "Status of communication with the applicant, default to `CaseCommunicationStatus.NotStarted`",
            "allOf": [{ "$ref": "#/components/schemas/CommunicationStatus" }]
          },
          "fastTrack": {
            "type": "boolean",
            "example": false,
            "description": "Requested fast track"
          },
          "publishedAt": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Date the case was published. ISO 8601 date and time format in UTC."
          },
          "requestedPublicationDate": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Requested advert publication date. ISO 8601 date and time format in UTC."
          },
          "advertTitle": {
            "type": "string",
            "example": "Titill á máli",
            "description": "Advert title on case"
          },
          "advertDepartment": {
            "example": "B-Deild",
            "description": "Advert department",
            "allOf": [{ "$ref": "#/components/schemas/Department" }]
          },
          "advertType": {
            "description": "The advert type",
            "allOf": [{ "$ref": "#/components/schemas/BaseEntity" }]
          },
          "advertCategories": {
            "description": "List of advert categories.",
            "nullable": false,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          },
          "transaction": {
            "description": "Case fee transaction.",
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/TBRTransaction" }]
          },
          "message": {
            "type": "string",
            "nullable": true,
            "example": "Additional message from sender"
          },
          "html": { "type": "string", "description": "The case html content." },
          "publicationNumber": {
            "type": "string",
            "description": "Publication number of the case."
          },
          "channels": {
            "description": "Channels for the case.",
            "example": {
              "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
              "email": "dmr@dmr.is",
              "phone": "+354 123 4567"
            },
            "type": "array",
            "items": { "$ref": "#/components/schemas/CaseChannel" }
          },
          "comments": {
            "description": "Comments on the case.",
            "example": {
              "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
              "createdAt": "2024-01-01T09:00:00Z",
              "type": "Comment",
              "task": {
                "from": "Ármann",
                "to": null,
                "title": "gerir athugasemd",
                "comment": "Pálína, getur þú tekið við og staðfest að upplýsingarnar séu réttar?"
              }
            },
            "type": "array",
            "items": { "$ref": "#/components/schemas/CommentDto" }
          },
          "signature": { "$ref": "#/components/schemas/Signature" },
          "attachments": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ApplicationAttachment" }
          },
          "additions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CaseAddition" }
          },
          "advertCorrections": {
            "description": "Corrections made to the related advert.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertCorrection" }
          },
          "history": {
            "description": "History of the case.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/CaseHistory" }
          }
        },
        "required": [
          "id",
          "advertId",
          "year",
          "caseNumber",
          "status",
          "tag",
          "involvedParty",
          "createdAt",
          "modifiedAt",
          "isLegacy",
          "assignedTo",
          "communicationStatus",
          "fastTrack",
          "publishedAt",
          "requestedPublicationDate",
          "advertTitle",
          "advertDepartment",
          "advertType",
          "advertCategories",
          "transaction",
          "message",
          "html",
          "publicationNumber",
          "channels",
          "comments",
          "signature",
          "attachments",
          "additions",
          "history"
        ]
      },
      "GetCaseResponse": {
        "type": "object",
        "properties": {
          "case": { "$ref": "#/components/schemas/CaseDetailed" }
        },
        "required": ["case"]
      },
      "Case": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "year": {
            "type": "number",
            "example": 2024,
            "description": "Year the case was created."
          },
          "status": {
            "description": "Status of the case, default to \"Innsent\"",
            "allOf": [{ "$ref": "#/components/schemas/CaseStatus" }]
          },
          "tag": {
            "description": "Internal tag for the case, default to null",
            "allOf": [{ "$ref": "#/components/schemas/CaseTag" }]
          },
          "involvedParty": {
            "description": "Involved party of the case.",
            "allOf": [{ "$ref": "#/components/schemas/InstitutionDto" }]
          },
          "createdAt": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Date the case was created. ISO 8601 date and time format in UTC."
          },
          "assignedTo": {
            "description": "User the case is assigned to.",
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/UserDto" }]
          },
          "communicationStatus": {
            "description": "Status of communication with the applicant, default to `CaseCommunicationStatus.NotStarted`",
            "allOf": [{ "$ref": "#/components/schemas/CommunicationStatus" }]
          },
          "fastTrack": {
            "type": "boolean",
            "example": false,
            "description": "Requested fast track"
          },
          "publishedAt": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Date the case was published. ISO 8601 date and time format in UTC."
          },
          "requestedPublicationDate": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Requested advert publication date. ISO 8601 date and time format in UTC."
          },
          "advertTitle": {
            "type": "string",
            "example": "Titill á máli",
            "description": "Advert title on case"
          },
          "advertDepartment": {
            "example": "B-Deild",
            "description": "Advert department",
            "allOf": [{ "$ref": "#/components/schemas/Department" }]
          },
          "advertType": {
            "description": "The advert type",
            "allOf": [{ "$ref": "#/components/schemas/BaseEntity" }]
          },
          "advertCategories": {
            "description": "List of advert categories.",
            "nullable": false,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          },
          "publicationNumber": {
            "type": "string",
            "description": "Publication number of the case."
          }
        },
        "required": [
          "id",
          "year",
          "status",
          "tag",
          "involvedParty",
          "createdAt",
          "assignedTo",
          "communicationStatus",
          "fastTrack",
          "publishedAt",
          "requestedPublicationDate",
          "advertTitle",
          "advertDepartment",
          "advertType",
          "advertCategories",
          "publicationNumber"
        ]
      },
      "Paging": {
        "type": "object",
        "properties": {
          "page": { "type": "number", "example": 1 },
          "totalPages": { "type": "number", "example": 10 },
          "totalItems": { "type": "number", "example": 1000 },
          "nextPage": { "type": "number", "example": 2, "nullable": true },
          "previousPage": { "type": "number", "example": 1, "nullable": true },
          "pageSize": {
            "type": "number",
            "example": 10,
            "minimum": 1,
            "maximum": 100
          },
          "hasNextPage": { "type": "boolean", "example": true },
          "hasPreviousPage": { "type": "boolean", "example": false }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "nextPage",
          "previousPage",
          "pageSize",
          "hasNextPage",
          "hasPreviousPage"
        ]
      },
      "GetCasesReponse": {
        "type": "object",
        "properties": {
          "cases": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Case" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["cases", "paging"]
      },
      "GetUsersResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserDto" }
          },
          "paging": { "$ref": "#/components/schemas/Paging" }
        },
        "required": ["users", "paging"]
      },
      "UnauthorizedException": { "type": "object", "properties": {} },
      "ForbiddenException": { "type": "object", "properties": {} },
      "InternalServerErrorException": { "type": "object", "properties": {} },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "email": { "type": "string" },
          "roleId": { "type": "string" },
          "involvedParties": { "type": "array", "items": { "type": "string" } },
          "displayName": { "type": "string" }
        }
      },
      "GetUserResponse": {
        "type": "object",
        "properties": { "user": { "$ref": "#/components/schemas/UserDto" } },
        "required": ["user"]
      },
      "GetRolesByUserResponse": {
        "type": "object",
        "properties": {
          "roles": {
            "description": "Available roles for the current user to fetch",
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserRoleDto" }
          }
        },
        "required": ["roles"]
      },
      "GetInvoledPartiesByUserResponse": {
        "type": "object",
        "properties": {
          "involvedParties": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/InstitutionDto" }
          }
        },
        "required": ["involvedParties"]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "nationalId": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "email": { "type": "string" },
          "roleId": { "type": "string" },
          "involvedParties": { "type": "array", "items": { "type": "string" } },
          "displayName": { "type": "string" }
        },
        "required": ["nationalId", "firstName", "lastName", "email", "roleId"]
      },
      "TransactionFeeCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the fee code, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "feeCode": {
            "type": "string",
            "description": "Unique fee code identifier.",
            "example": "A101"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the fee."
          },
          "feeType": {
            "type": "string",
            "description": "Type of fee",
            "example": "BASE",
            "enum": [
              "BASE",
              "ADDITIONAL_DOC",
              "FAST_TRACK",
              "BASE_MODIFIER",
              "CUSTOM_MULTIPLIER",
              "IMAGE_TIER",
              "LOWERED",
              "PERCENTAGE"
            ]
          },
          "value": {
            "type": "number",
            "description": "Fee amount if fixed, or percentage multiplier if percentage-based.",
            "example": 7000
          },
          "department": {
            "type": "string",
            "description": "Department the fee code is associated with."
          }
        },
        "required": [
          "id",
          "feeCode",
          "description",
          "feeType",
          "value",
          "department"
        ]
      },
      "TransactionFeeCodesResponse": {
        "type": "object",
        "properties": {
          "codes": {
            "description": "List of fee codes",
            "type": "array",
            "items": { "$ref": "#/components/schemas/TransactionFeeCode" }
          }
        },
        "required": ["codes"]
      },
      "StatusCounter": {
        "type": "object",
        "properties": {
          "status": { "type": "string" },
          "count": { "type": "number" }
        },
        "required": ["status", "count"]
      },
      "GetCasesWithStatusCount": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/StatusCounter" }
          },
          "cases": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Case" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["statuses", "cases", "paging"]
      },
      "PresignedUrlResponse": {
        "type": "object",
        "properties": {
          "url": { "type": "string" },
          "cdn": { "type": "string" },
          "key": { "type": "string" }
        },
        "required": ["url"]
      },
      "PostApplicationAttachmentBody": {
        "type": "object",
        "properties": {
          "fileName": { "type": "string" },
          "originalFileName": { "type": "string" },
          "fileFormat": { "type": "string" },
          "fileExtension": { "type": "string" },
          "fileLocation": { "type": "string" },
          "fileSize": { "type": "number" }
        },
        "required": [
          "fileName",
          "originalFileName",
          "fileFormat",
          "fileExtension",
          "fileLocation",
          "fileSize"
        ]
      },
      "UpdateAdvertHtmlCorrection": {
        "type": "object",
        "properties": {
          "advertHtml": { "type": "string", "description": "Advert HTML" },
          "title": {
            "type": "string",
            "description": "Title of the correction"
          },
          "description": {
            "type": "string",
            "description": "The correction description"
          }
        },
        "required": ["advertHtml", "title", "description"]
      },
      "UpdateAdvertHtmlBody": {
        "type": "object",
        "properties": {
          "advertHtml": { "type": "string", "description": "Advert HTML" },
          "documentPdfUrl": { "type": "string", "nullable": true }
        },
        "required": ["advertHtml"]
      },
      "DepartmentEnum": {
        "type": "string",
        "enum": ["A deild", "B deild", "C deild"]
      },
      "DepartmentCounter": {
        "type": "object",
        "properties": {
          "department": { "type": "string" },
          "count": { "type": "number" }
        },
        "required": ["department", "count"]
      },
      "GetCasesWithDepartmentCount": {
        "type": "object",
        "properties": {
          "departments": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DepartmentCounter" }
          },
          "cases": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Case" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["departments", "cases", "paging"]
      },
      "PostCasePublishBody": {
        "type": "object",
        "properties": {
          "caseIds": {
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851",
            "description": "Id of the case to publish.",
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": ["caseIds"]
      },
      "GetComments": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CommentDto" }
          }
        },
        "required": ["comments"]
      },
      "InternalCommentBodyDto": {
        "type": "object",
        "properties": { "comment": { "type": "string" } },
        "required": ["comment"]
      },
      "GetComment": {
        "type": "object",
        "properties": {
          "comment": { "$ref": "#/components/schemas/CommentDto" }
        },
        "required": ["comment"]
      },
      "ExternalCommentBodyDto": {
        "type": "object",
        "properties": { "comment": { "type": "string" } },
        "required": ["comment"]
      },
      "GetCasesWithPublicationNumber": {
        "type": "object",
        "properties": {
          "cases": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Case" }
          }
        },
        "required": ["cases"]
      },
      "PostApplicationAssetBody": {
        "type": "object",
        "properties": { "key": { "type": "string" } },
        "required": ["key"]
      },
      "CreateCaseDto": {
        "type": "object",
        "properties": {
          "involvedPartyId": { "type": "string" },
          "applicationId": { "type": "string" },
          "departmentId": { "type": "string" },
          "typeId": { "type": "string" },
          "subject": { "type": "string" },
          "categoryIds": { "type": "array", "items": { "type": "string" } },
          "requestedPublicationDate": { "type": "string" },
          "caseStatusId": { "type": "string" },
          "communicationStatusId": { "type": "string" },
          "html": { "type": "string" },
          "message": { "type": "string" },
          "assignedUserId": { "type": "string" }
        },
        "required": ["involvedPartyId", "departmentId", "typeId", "subject"]
      },
      "CreateCaseResponseDto": {
        "type": "object",
        "properties": { "id": { "type": "string" } },
        "required": ["id"]
      },
      "AddCaseAdvertCorrection": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the correction"
          },
          "description": {
            "type": "string",
            "description": "The correction description"
          },
          "documentHtml": { "type": "string", "nullable": true },
          "documentPdfUrl": { "type": "string", "nullable": true }
        },
        "required": ["title", "description"]
      },
      "AdvertPublicationNumber": {
        "type": "object",
        "properties": {
          "number": {
            "type": "number",
            "description": "Serial number of the publication number.",
            "example": "1"
          },
          "year": {
            "type": "number",
            "description": "Year of the publication number.",
            "example": "2024"
          },
          "full": {
            "type": "string",
            "description": "Full publication number, with both `number` and `year` separated with `/`.",
            "example": "1/2024"
          }
        },
        "required": ["number", "year", "full"]
      },
      "AdvertSimilar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "department": {
            "description": "The department the advert is for.",
            "nullable": false,
            "example": "A deild",
            "allOf": [{ "$ref": "#/components/schemas/BaseEntity" }]
          },
          "subject": {
            "type": "string",
            "description": "Subject of the advert, always dependant on the `type`.",
            "example": "fyrir hundahald í Reykjavíkurborg."
          },
          "title": {
            "type": "string",
            "description": "Title of the advert with both `type` and `subject`.",
            "example": "GJALDSKRÁ fyrir hundahald í Reykjavíkurborg."
          },
          "publicationNumber": {
            "description": "Publication number of the advert",
            "allOf": [
              { "$ref": "#/components/schemas/AdvertPublicationNumber" }
            ]
          },
          "publicationDate": {
            "type": "string",
            "description": "Date the advert was signed, can be null. ISO 8601 date and time format in UTC.",
            "nullable": true,
            "example": "2024-01-20T09:00:00Z"
          },
          "categories": {
            "description": "List of advert categories.",
            "nullable": false,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          },
          "involvedParty": {
            "description": "Involved party for the advert.",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/InstitutionDto" }]
          }
        },
        "required": [
          "id",
          "department",
          "title",
          "publicationNumber",
          "publicationDate",
          "categories",
          "involvedParty"
        ]
      },
      "GetSimilarAdvertsResponse": {
        "type": "object",
        "properties": {
          "adverts": {
            "description": "List of similar adverts",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertSimilar" }
          }
        },
        "required": ["adverts"]
      },
      "AdvertDocument": {
        "type": "object",
        "properties": {
          "isLegacy": {
            "type": "boolean",
            "description": "Is the `html` from the legacy system?",
            "example": "false"
          },
          "html": {
            "type": "string",
            "description": "Full HTML for the advert, either generated by new system or legacy system based on `isLegacy`.",
            "example": "<html string>",
            "nullable": true
          },
          "pdfUrl": {
            "type": "string",
            "description": "URL for the generated PDF file.",
            "example": "<url>",
            "nullable": true
          }
        },
        "required": ["isLegacy", "html"]
      },
      "AdvertAttachment": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "File name for Attachment.",
            "example": "Viðauki.pdf"
          },
          "type": {
            "type": "string",
            "description": "Type Attachment.",
            "example": "addendum"
          },
          "url": {
            "type": "string",
            "description": "URL for Attachment.",
            "example": "<url>"
          }
        },
        "required": ["name", "type", "url"]
      },
      "Advert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "department": {
            "description": "The department the advert is for.",
            "nullable": false,
            "example": "A deild",
            "allOf": [{ "$ref": "#/components/schemas/BaseEntity" }]
          },
          "type": {
            "description": "Type of the advert.",
            "example": "GJALDSKRÁ",
            "allOf": [{ "$ref": "#/components/schemas/AdvertType" }]
          },
          "subject": {
            "type": "string",
            "description": "Subject of the advert, always dependant on the `type`.",
            "example": "fyrir hundahald í Reykjavíkurborg."
          },
          "title": {
            "type": "string",
            "description": "Title of the advert with both `type` and `subject`.",
            "example": "GJALDSKRÁ fyrir hundahald í Reykjavíkurborg."
          },
          "status": {
            "type": "string",
            "enum": [
              "Virk",
              "Afturkölluð",
              "Drög",
              "Eldri auglýsing",
              "Hafnað",
              "Í bið",
              "Í vinnslu",
              "Innsend",
              "Tilbúin til útgáfu",
              "Útgefin"
            ],
            "description": "Status of the advert",
            "nullable": false,
            "example": "Virk"
          },
          "publicationNumber": {
            "description": "Publication number of the advert",
            "allOf": [
              { "$ref": "#/components/schemas/AdvertPublicationNumber" }
            ]
          },
          "createdDate": {
            "type": "string",
            "description": "Date the advert was created. ISO 8601 date and time format in UTC.",
            "nullable": false,
            "example": "2024-01-01T09:00:00Z"
          },
          "updatedDate": {
            "type": "string",
            "description": "Date the advert was last updated. ISO 8601 date and time format in UTC.",
            "nullable": false,
            "example": "2024-01-20T09:00:00Z"
          },
          "signatureDate": {
            "type": "string",
            "description": "Date the advert was signed, can be null. ISO 8601 date and time format in UTC.",
            "nullable": true,
            "example": "2024-01-10T16:00:00Z"
          },
          "publicationDate": {
            "type": "string",
            "description": "Date the advert was signed, can be null. ISO 8601 date and time format in UTC.",
            "nullable": true,
            "example": "2024-01-20T09:00:00Z"
          },
          "categories": {
            "description": "List of advert categories.",
            "nullable": false,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          },
          "involvedParty": {
            "description": "Involved party for the advert.",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/InstitutionDto" }]
          },
          "document": {
            "description": "Advert document in different formats.",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/AdvertDocument" }]
          },
          "attachments": {
            "description": "Attachments for the advert.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertAttachment" }
          },
          "corrections": {
            "description": "Corrections made to the advert.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertCorrection" }
          }
        },
        "required": [
          "id",
          "department",
          "type",
          "title",
          "status",
          "publicationNumber",
          "createdDate",
          "updatedDate",
          "signatureDate",
          "publicationDate",
          "categories",
          "involvedParty",
          "document",
          "attachments"
        ]
      },
      "GetAdvertResponse": {
        "type": "object",
        "properties": {
          "advert": {
            "description": "Advert",
            "allOf": [{ "$ref": "#/components/schemas/Advert" }]
          }
        },
        "required": ["advert"]
      },
      "GetAdvertsResponse": {
        "type": "object",
        "properties": {
          "adverts": {
            "description": "List of adverts",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Advert" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["adverts", "paging"]
      },
      "GetPdfRespone": {
        "type": "object",
        "properties": {
          "content": { "type": "string", "description": "Base64 encoded PDF" }
        },
        "required": ["content"]
      },
      "GetPdfUrlResponse": {
        "type": "object",
        "properties": { "url": { "type": "string" } },
        "required": ["url"]
      },
      "GetAdvertMainTypes": {
        "type": "object",
        "properties": {
          "mainTypes": {
            "description": "List of all main advert types",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertMainType" }
          },
          "paging": {
            "description": "Paging information",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["mainTypes", "paging"]
      },
      "GetAdvertTypes": {
        "type": "object",
        "properties": {
          "types": {
            "description": "List of advert types",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertType" }
          },
          "paging": {
            "description": "Paging information",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["types", "paging"]
      },
      "StatisticsStatusCount": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "count": {
            "type": "number",
            "description": "Number of cases with status"
          },
          "percentage": {
            "type": "number",
            "description": "Percentage of the total number of cases with status"
          }
        },
        "required": ["title", "count", "percentage"]
      },
      "GetStatisticsDepartmentResponse": {
        "type": "object",
        "properties": {
          "statuses": {
            "description": "List of case statuses with their respective counts",
            "type": "array",
            "items": { "$ref": "#/components/schemas/StatisticsStatusCount" }
          },
          "total": { "type": "number", "description": "Total number of cases" }
        },
        "required": ["statuses", "total"]
      },
      "StatisticsOverviewCategory": {
        "type": "object",
        "properties": {
          "count": { "type": "number" },
          "text": { "type": "string" }
        },
        "required": ["count", "text"]
      },
      "GetStatisticsOverviewResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatisticsOverviewCategory"
            }
          },
          "total": { "type": "number" }
        },
        "required": ["categories", "total"]
      },
      "GetStatisticOverviewDashboardItem": {
        "type": "object",
        "properties": {
          "overviewType": { "type": "string" },
          "overview": {
            "$ref": "#/components/schemas/GetStatisticsOverviewResponse"
          }
        },
        "required": ["overviewType", "overview"]
      },
      "GetStatisticOverviewDashboardResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetStatisticOverviewDashboardItem"
            }
          }
        },
        "required": ["items"]
      },
      "StatisticsOverviewQueryType": {
        "type": "string",
        "enum": ["general", "personal", "inactive", "publishing"]
      },
      "MainCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the main category, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the main category.",
            "example": "Dómstólar og réttarfar"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the main category, used in URLs and API requests.",
            "example": "domstolar-og-rettarfar"
          },
          "departmentId": {
            "type": "string",
            "description": "Department linked to category.",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "description": {
            "type": "string",
            "description": "Description of the main category, used on front page.",
            "example": "Hæstiréttur, lögmenn, lögreglumál, dómsmál og landsdómur."
          },
          "categories": {
            "description": "List of sub categories under this main category.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          }
        },
        "required": [
          "id",
          "title",
          "slug",
          "departmentId",
          "description",
          "categories"
        ]
      },
      "GetMainCategoriesResponse": {
        "type": "object",
        "properties": {
          "mainCategories": {
            "description": "List of main categories",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MainCategory" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["mainCategories", "paging"]
      },
      "GetCategoriesResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "description": "List of advert categories",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["categories", "paging"]
      },
      "GetDepartmentResponse": {
        "type": "object",
        "properties": {
          "department": {
            "description": "The department that was found.",
            "allOf": [{ "$ref": "#/components/schemas/Department" }]
          }
        },
        "required": ["department"]
      },
      "GetDepartmentsResponse": {
        "type": "object",
        "properties": {
          "departments": {
            "description": "List of departments",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Department" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["departments", "paging"]
      },
      "GetInstitutions": {
        "type": "object",
        "properties": {
          "institutions": {
            "description": "List of involved parties",
            "type": "array",
            "items": { "$ref": "#/components/schemas/InstitutionDto" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["institutions", "paging"]
      },
      "CreateCaseChannelBody": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Nafn einstaklings" },
          "email": { "type": "string", "example": "test@test.is" },
          "phone": { "type": "string", "example": "555 5555" }
        },
        "required": ["name", "email"]
      },
      "GetCommunicationSatusesResponse": {
        "type": "object",
        "properties": {
          "statuses": {
            "description": "List of communication statuses",
            "type": "array",
            "items": { "$ref": "#/components/schemas/CommunicationStatus" }
          }
        },
        "required": ["statuses"]
      },
      "GetTagsResponse": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "List of advert categories",
            "type": "array",
            "items": { "$ref": "#/components/schemas/CaseTag" }
          }
        },
        "required": ["tags"]
      }
    }
  }
}
