{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/pdf/case/{id}": {
      "get": {
        "operationId": "getPdfByCaseId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfRespone" }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/application/{id}": {
      "get": {
        "operationId": "getPdfByApplicationId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfRespone" }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/case/{id}/url": {
      "get": {
        "operationId": "getPdfUrlByCaseId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfUrlResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/application/{id}/url": {
      "get": {
        "operationId": "getPdfUrlByApplicationId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfUrlResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/cases/nextPublicationNumber/{departmentId}": {
      "get": {
        "operationId": "getNextPublicationNumber",
        "summary": "Get next publication number for department",
        "parameters": [
          {
            "name": "departmentId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNextPublicationNumberResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/departments": {
      "get": {
        "operationId": "getDepartments",
        "summary": "Return all departments",
        "parameters": [
          {
            "name": "search",
            "description": "String to search for",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "default": [],
              "type": "array",
              "items": { "type": "string" }
            }
          },
          {
            "name": "page",
            "description": "Page number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "description": "Page size number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDepartmentsResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/communicationStatuses": {
      "get": {
        "operationId": "getCommunicationStatuses",
        "summary": "Get communication statuses",
        "parameters": [],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommunicationSatusesResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/tags": {
      "get": {
        "operationId": "getTags",
        "summary": "Get tags",
        "parameters": [],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetTagsResponse" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/categories": {
      "get": {
        "operationId": "getCategories",
        "summary": "Get categories",
        "parameters": [
          {
            "name": "search",
            "description": "String to search for",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "default": [],
              "type": "array",
              "items": { "type": "string" }
            }
          },
          {
            "name": "page",
            "description": "Page number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "description": "Page size number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoriesResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/main-categories": {
      "get": {
        "operationId": "getMainCategories",
        "summary": "Get main categories",
        "parameters": [
          {
            "name": "search",
            "description": "String to search for",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "default": [],
              "type": "array",
              "items": { "type": "string" }
            }
          },
          {
            "name": "page",
            "description": "Page number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "description": "Page size number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainCategoriesResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "post": {
        "operationId": "createMainCategory",
        "summary": "Create main category",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateMainCategory" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/main-categories/{id}": {
      "delete": {
        "operationId": "deleteMainCategory",
        "summary": "Delete main category",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      },
      "put": {
        "operationId": "updateMainCategory",
        "summary": "Update main category",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateMainCategory" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/main-categories/{mainCategoryId}/categories/{categoryId}": {
      "delete": {
        "operationId": "deleteMainCategoryCategory",
        "summary": "Delete main category category",
        "parameters": [
          {
            "name": "mainCategoryId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "categoryId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/main-categories/{mainCategoryId}/categories": {
      "post": {
        "operationId": "createMainCategoryCategories",
        "parameters": [
          {
            "name": "mainCategoryId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMainCategoryCategories"
              }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/overview": {
      "get": {
        "operationId": "editorialOverview",
        "summary": "Get editorial overview",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the case to get.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "description": "String to search for in cases.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "applicationId",
            "description": "Application ID",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "year",
            "description": "Year",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "description": "Page number",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "pageSize",
            "description": "Page size",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "caseNumber",
            "description": "Case number to filter on, takes into account `caseNumber` on `Case`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "status",
            "description": "Case status id to filter cases on, takes into account `status` on `Case`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "employeeId",
            "description": "Id of the employee to filter cases on, takes into account `employeeId` on `Case` and `CaseComment`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "published",
            "description": "Boolean to filter cases on, takes into account `published` on `Case`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "fastTrack",
            "description": "Boolean to filter cases on, takes into account `fastTrack` on `Case`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "institution",
            "description": "Institution to filter cases on, takes into account `institution` on `Case`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "dateFrom",
            "description": "Date from which to filter adverts on, inclusive, takes into account `createdDate`, `updatedDate` and `signatureDate`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "dateTo",
            "description": "Date to which to filter adverts on, inclusive, takes into account `createdDate`, `updatedDate` and `signatureDate`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "department",
            "description": "Department slug to filter cases on, takes into account `department` on `Advert`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "type",
            "description": "Type slug to filter cases on, takes into account `type` on `Advert`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "category",
            "description": "Category slug to filter cases on, takes into account `category` on `Advert`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorialOverviewResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{caseId}/attachments/{attachmentId}": {
      "get": {
        "operationId": "getCaseAttachment",
        "summary": "Get case attachment",
        "parameters": [
          {
            "name": "caseId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "attachmentId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresignedUrlResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "put": {
        "operationId": "overwriteCaseAttachment",
        "summary": "Overwrite case attachment",
        "parameters": [
          {
            "name": "caseId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "attachmentId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostApplicationAttachmentBody"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresignedUrlResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/price": {
      "put": {
        "operationId": "updatePrice",
        "summary": "Update case price",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCasePriceBody" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/paid": {
      "put": {
        "operationId": "updatePaid",
        "summary": "Update paid status of case",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdatePaidBody" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/tag": {
      "put": {
        "operationId": "updateTag",
        "summary": "Update tag value of case",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateTagBody" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/department": {
      "put": {
        "operationId": "updateDepartment",
        "summary": "Update department of case and application",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCaseDepartmentBody"
              }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/type": {
      "put": {
        "operationId": "updateCaseType",
        "summary": "Update type of case and application",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCaseTypeBody" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/communicationStatus": {
      "put": {
        "operationId": "updateCommunicationStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommunicationStatusBody"
              }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/publishDate": {
      "put": {
        "operationId": "updatePublishDate",
        "summary": "Update publish date of case and application",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdatePublishDateBody" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/title": {
      "put": {
        "operationId": "updateTitle",
        "summary": "Update title of case and application",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateTitleBody" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/categories": {
      "put": {
        "operationId": "updateCategories",
        "summary": "Update categories of case and application",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCategoriesBody" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/status/next": {
      "put": {
        "operationId": "updateNextStatus",
        "summary": "Update case status to next.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateNextStatusBody" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/status/previous": {
      "put": {
        "operationId": "updatePreviousStatus",
        "summary": "Update case status to previous.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateNextStatusBody" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/assign/{userId}": {
      "put": {
        "operationId": "assignEmployee",
        "summary": "Updates assigned user on the case.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/status": {
      "put": {
        "operationId": "updateCaseStatus",
        "summary": "Update case status.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCaseStatusBody" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/html": {
      "put": {
        "operationId": "updateAdvertHtml",
        "summary": "Update advert html",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateAdvertHtmlBody" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}": {
      "get": {
        "operationId": "getCase",
        "summary": "Get case by ID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetCaseResponse" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases": {
      "post": {
        "operationId": "createCase",
        "summary": "Create case.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PostApplicationBody" }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateCaseResponse" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "getCases",
        "summary": "Get cases",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the case to get.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "description": "String to search for in cases.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "applicationId",
            "description": "Application ID",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "year",
            "description": "Year",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "description": "Page number",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "pageSize",
            "description": "Page size",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "caseNumber",
            "description": "Case number to filter on, takes into account `caseNumber` on `Case`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "status",
            "description": "Case status id to filter cases on, takes into account `status` on `Case`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "employeeId",
            "description": "Id of the employee to filter cases on, takes into account `employeeId` on `Case` and `CaseComment`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "published",
            "description": "Boolean to filter cases on, takes into account `published` on `Case`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "fastTrack",
            "description": "Boolean to filter cases on, takes into account `fastTrack` on `Case`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "institution",
            "description": "Institution to filter cases on, takes into account `institution` on `Case`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "dateFrom",
            "description": "Date from which to filter adverts on, inclusive, takes into account `createdDate`, `updatedDate` and `signatureDate`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "dateTo",
            "description": "Date to which to filter adverts on, inclusive, takes into account `createdDate`, `updatedDate` and `signatureDate`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "department",
            "description": "Department slug to filter cases on, takes into account `department` on `Advert`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "type",
            "description": "Type slug to filter cases on, takes into account `type` on `Advert`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "category",
            "description": "Category slug to filter cases on, takes into account `category` on `Advert`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetCasesReponse" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/published/{department}": {
      "get": {
        "operationId": "getPublishedCases",
        "summary": "Get cases",
        "parameters": [
          {
            "name": "department",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "description": "Page number",
            "required": false,
            "name": "page",
            "in": "query",
            "schema": { "default": 1, "type": "number" }
          },
          {
            "description": "Search for advert title",
            "required": false,
            "name": "search",
            "in": "query",
            "schema": { "default": "", "type": "string" }
          },
          {
            "description": "Page size",
            "required": false,
            "name": "pageSize",
            "in": "query",
            "schema": { "default": 10, "type": "number" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPublishedCasesResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/publish": {
      "post": {
        "operationId": "publish",
        "summary": "Publish cases",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PostCasePublishBody" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/unpublish": {
      "post": {
        "operationId": "unpublish",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "201": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/reject": {
      "post": {
        "operationId": "rejectCase",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "201": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/comments": {
      "get": {
        "operationId": "getComments",
        "summary": "Get case comments",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "description": "Type of the comment",
            "required": false,
            "name": "internal",
            "in": "query",
            "schema": { "enum": [], "type": "number" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCaseCommentsResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "post": {
        "operationId": "createComment",
        "summary": "Add comment to case",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PostCaseCommentBody" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/cases/{id}/comments/{commentId}": {
      "get": {
        "operationId": "getComment",
        "summary": "Get case comment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "commentId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCaseCommentResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "deleteComment",
        "summary": "Delete comment from case",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "commentId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/signatures/involved-party/{id}": {
      "get": {
        "operationId": "getSignaturesForInvolvedParty",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "description": "String to search for",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "default": [],
              "type": "array",
              "items": { "type": "string" }
            }
          },
          {
            "name": "page",
            "description": "Page number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "description": "Page size number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSignaturesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/signatures/case/{id}": {
      "get": {
        "operationId": "getSignaturesByCaseId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "description": "String to search for",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "default": [],
              "type": "array",
              "items": { "type": "string" }
            }
          },
          {
            "name": "page",
            "description": "Page number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "description": "Page size number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSignaturesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/signatures/advert/{id}": {
      "get": {
        "operationId": "getSignaturesByAdvertId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "description": "String to search for",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "default": [],
              "type": "array",
              "items": { "type": "string" }
            }
          },
          {
            "name": "page",
            "description": "Page number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "description": "Page size number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSignaturesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/signatures/{id}": {
      "get": {
        "operationId": "getSignatureById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSignatureResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteSignature",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } }
      },
      "put": {
        "operationId": "updateSignature",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateSignatureBody" }
            }
          }
        },
        "responses": { "204": { "description": "" } }
      }
    },
    "/api/v1/signatures": {
      "get": {
        "operationId": "getSignatures",
        "parameters": [
          {
            "name": "search",
            "description": "String to search for",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "default": [],
              "type": "array",
              "items": { "type": "string" }
            }
          },
          {
            "name": "page",
            "description": "Page number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "description": "Page size number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } }
      }
    },
    "/api/v1/advert-types/types": {
      "get": {
        "operationId": "getTypes",
        "summary": "",
        "parameters": [
          {
            "required": false,
            "description": "Search by id",
            "name": "id",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Filter by unassigned",
            "name": "unassigned",
            "in": "query",
            "schema": { "type": "boolean" }
          },
          {
            "required": false,
            "description": "Search by main type id",
            "name": "mainType",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by title",
            "name": "search",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by slug",
            "name": "slug",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by department slug, title or id",
            "name": "department",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "The page number",
            "name": "page",
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "required": false,
            "description": "The page size",
            "name": "pageSize",
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertTypes" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createType",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateAdvertTypeBody" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/advert-types/main-types": {
      "get": {
        "operationId": "getMainTypes",
        "summary": "",
        "parameters": [
          {
            "required": false,
            "description": "Search by id",
            "name": "id",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Filter by unassigned",
            "name": "unassigned",
            "in": "query",
            "schema": { "type": "boolean" }
          },
          {
            "required": false,
            "description": "Search by main type id",
            "name": "mainType",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by title",
            "name": "search",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by slug",
            "name": "slug",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by department slug, title or id",
            "name": "department",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "The page number",
            "name": "page",
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "required": false,
            "description": "The page size",
            "name": "pageSize",
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertMainTypes" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createMainType",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdvertMainTypeBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertMainType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/advert-types/types/{id}": {
      "get": {
        "operationId": "getTypeById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateType",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateAdvertTypeBody" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteType",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/advert-types/main-types/{id}": {
      "get": {
        "operationId": "getMainTypeById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertMainType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateMainType",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateAdvertMainType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertMainType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteMainType",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/advert-types/main-types/bulk": {
      "post": {
        "operationId": "createMainTypesBulk",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdvertMainTypeBulk"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "" },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin-users/roles": {
      "get": {
        "operationId": "getRoles",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdminUserRoles" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/admin-users/users": {
      "get": {
        "operationId": "getUsers",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdminUsers" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "post": {
        "operationId": "createUser",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateAdminUser" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/admin-users/users/{id}": {
      "get": {
        "operationId": "getUserById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdminUser" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "put": {
        "operationId": "updateUser",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateAdminUser" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "deleteUser",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/admin-users/users/nationalId/{nationalId}": {
      "get": {
        "operationId": "getUserByNationalId",
        "summary": "",
        "parameters": [
          {
            "name": "nationalId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdminUser" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/application-users": {
      "get": {
        "operationId": "getApplicationUsers",
        "summary": "",
        "parameters": [
          {
            "required": false,
            "name": "involvedParty",
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get application users",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetApplicationUsers" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "post": {
        "operationId": "createApplicationUser",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateApplicationUser" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetApplicationUser" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/application-users/{id}": {
      "get": {
        "operationId": "getApplicationUser",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetApplicationUser" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "deleteApplicationUser",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      },
      "put": {
        "operationId": "updateApplicationUser",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateApplicationUser" }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetApplicationUser" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/institutions/{id}": {
      "get": {
        "operationId": "getInstitution",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetInstitution" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateInstitution",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateInstitution" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetInstitution" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "deleteInstitution",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/institutions": {
      "get": {
        "operationId": "getInstitutions",
        "summary": "",
        "parameters": [
          {
            "required": false,
            "example": 1,
            "name": "page",
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "required": false,
            "example": 10,
            "name": "pageSize",
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "required": false,
            "name": "search",
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetInstitutions" }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createInstitution",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateInstitution" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetInstitution" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/statistics/department": {
      "get": {
        "operationId": "getStatisticsForDepartment",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatisticsDepartmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/statistics/overview": {
      "get": {
        "operationId": "getStatisticsOverview",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "enum": ["general", "personal", "inactive", "publishing"],
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatisticsOverviewResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "operationId": "HealthController_",
        "parameters": [],
        "responses": { "200": { "description": "Health check endpoint." } }
      }
    }
  },
  "info": {
    "title": "The Official Journal of Iceland Admin API",
    "description": "Admin api for the Official Journal of Iceland. This API is used to manage the content of the Official Journal of Iceland.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" }
    },
    "schemas": {
      "GetPdfRespone": {
        "type": "object",
        "properties": {
          "content": { "type": "string", "description": "Base64 encoded PDF" }
        },
        "required": ["content"]
      },
      "GetPdfUrlResponse": {
        "type": "object",
        "properties": { "url": { "type": "string" } },
        "required": ["url"]
      },
      "GetNextPublicationNumberResponse": {
        "type": "object",
        "properties": {
          "publicationNumber": {
            "type": "number",
            "description": "Next publication number",
            "example": 1
          }
        },
        "required": ["publicationNumber"]
      },
      "Department": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert department, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the advert department.",
            "example": "A deild"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the advert department, used in URLs and API requests.",
            "example": "a-deild"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "Paging": {
        "type": "object",
        "properties": {
          "page": { "type": "number", "example": 1 },
          "totalPages": { "type": "number", "example": 10 },
          "totalItems": { "type": "number", "example": 1000 },
          "nextPage": { "type": "number", "example": 2, "nullable": true },
          "previousPage": { "type": "number", "example": 1, "nullable": true },
          "pageSize": {
            "type": "number",
            "example": 10,
            "minimum": 1,
            "maximum": 100
          },
          "hasNextPage": { "type": "boolean", "example": true },
          "hasPreviousPage": { "type": "boolean", "example": false }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "nextPage",
          "previousPage",
          "pageSize",
          "hasNextPage",
          "hasPreviousPage"
        ]
      },
      "GetDepartmentsResponse": {
        "type": "object",
        "properties": {
          "departments": {
            "description": "List of departments",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Department" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["departments", "paging"]
      },
      "CommunicationStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the communication status"
          },
          "title": {
            "type": "string",
            "enum": [
              "Ekki hafin",
              "Beðið eftir svörum",
              "Svör hafa borist",
              "Lokið"
            ],
            "description": "The title of the communication status"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the communication status"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "GetCommunicationSatusesResponse": {
        "type": "object",
        "properties": {
          "statuses": {
            "description": "List of communication statuses",
            "type": "array",
            "items": { "$ref": "#/components/schemas/CommunicationStatus" }
          }
        },
        "required": ["statuses"]
      },
      "CaseTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the case tag",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "enum": ["Ekki hafið", "Í yfirlestri", "Samlesin", "Þarf skoðun"],
            "description": "Title of the case tag",
            "example": "Í yfirlestri"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the case tag",
            "example": "i-yfirlestri"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "GetTagsResponse": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "List of advert categories",
            "type": "array",
            "items": { "$ref": "#/components/schemas/CaseTag" }
          }
        },
        "required": ["tags"]
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert category, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the advert category.",
            "example": "Evrópska efnahagssvæðið"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the advert category, used in URLs and API requests.",
            "example": "evropska-efnahagssvaedid"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "GetCategoriesResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "description": "List of advert categories",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["categories", "paging"]
      },
      "MainCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the main category, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the main category.",
            "example": "Dómstólar og réttarfar"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the main category, used in URLs and API requests.",
            "example": "domstolar-og-rettarfar"
          },
          "description": {
            "type": "string",
            "description": "Description of the main category, used on front page.",
            "example": "Hæstiréttur, lögmenn, lögreglumál, dómsmál og landsdómur."
          },
          "categories": {
            "description": "List of sub categories under this main category.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          }
        },
        "required": ["id", "title", "slug", "description", "categories"]
      },
      "GetMainCategoriesResponse": {
        "type": "object",
        "properties": {
          "mainCategories": {
            "description": "List of main categories",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MainCategory" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["mainCategories", "paging"]
      },
      "CreateMainCategory": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the main category."
          },
          "description": {
            "type": "string",
            "description": "Description of the main category"
          },
          "categories": {
            "description": "Sub categories under this main category",
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": ["title", "description", "categories"]
      },
      "CreateMainCategoryCategories": {
        "type": "object",
        "properties": {
          "categories": {
            "description": "Sub categories under this main category",
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": ["categories"]
      },
      "UpdateMainCategory": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the main category."
          },
          "description": {
            "type": "string",
            "description": "Description of the main category"
          }
        }
      },
      "CaseStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "title": {
            "type": "string",
            "enum": [
              "Innsent",
              "Grunnvinnsla",
              "Yfirlestur",
              "Tilbúið",
              "Útgefið",
              "Tekið úr birtingu",
              "Birtingu hafnað"
            ],
            "example": "Innsent",
            "description": "Status of the case"
          },
          "slug": {
            "type": "string",
            "example": "innsent",
            "description": "Slug of the case staus"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "Institution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the institution, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the institution",
            "example": "Dómsmálaráðuneytið"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the institution, used in URLs and API requests.",
            "example": "domsmalaraduneytid"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the user, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "First name of the user.",
            "example": "Jón Gunnar"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user.",
            "example": "Jónsson"
          },
          "active": {
            "type": "boolean",
            "description": "Status of the user",
            "example": true
          }
        },
        "required": ["id", "name", "lastName", "active"]
      },
      "AdvertType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the main advert type"
          },
          "title": {
            "type": "string",
            "description": "The title of the main advert type"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the main advert type"
          },
          "department": {
            "description": "The department of the main advert type",
            "allOf": [{ "$ref": "#/components/schemas/Department" }]
          }
        },
        "required": ["id", "title", "slug", "department"]
      },
      "CaseChannel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851",
            "description": "Id of the case channel."
          },
          "email": {
            "type": "string",
            "example": "hjalp@dmr.is",
            "description": "Email of the case channel."
          },
          "phone": {
            "type": "string",
            "example": "+354 123 4567",
            "description": "Phone of the case channel."
          }
        },
        "required": ["id", "email", "phone"]
      },
      "CaseCommentType": {
        "type": "string",
        "enum": [
          "Innsent af:",
          "færir mál á",
          "merkir sér málið.",
          "færir mál í stöðuna:",
          "gerir athugasemd.",
          "skráir skilaboð"
        ]
      },
      "CaseCommentDirection": {
        "type": "string",
        "description": "Was the comment sent or received.",
        "enum": ["sent", "received"]
      },
      "CaseComment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851",
            "description": "Id of the case comment."
          },
          "internal": {
            "type": "boolean",
            "description": "Is the comment internal."
          },
          "title": {
            "example": "f. 2 dögum",
            "$ref": "#/components/schemas/CaseCommentType"
          },
          "caseStatus": {
            "type": "string",
            "enum": [
              "Innsent",
              "Grunnvinnsla",
              "Yfirlestur",
              "Tilbúið",
              "Útgefið",
              "Tekið úr birtingu",
              "Birtingu hafnað"
            ],
            "description": "Case status of when the comment was created."
          },
          "age": {
            "type": "string",
            "example": "f. 2 dögum",
            "description": "String representation of the age of the case comment."
          },
          "ageIso": {
            "type": "string",
            "description": "ISO date format representation of the age of the case comment."
          },
          "direction": { "$ref": "#/components/schemas/CaseCommentDirection" },
          "creator": {
            "type": "string",
            "description": "Who created the comment "
          },
          "receiver": {
            "type": "string",
            "description": "Who received the comment"
          },
          "comment": { "type": "string", "description": "The comment itself" },
          "state": { "type": "string", "description": "The comment itself" }
        },
        "required": [
          "id",
          "internal",
          "title",
          "caseStatus",
          "age",
          "ageIso",
          "direction",
          "creator",
          "receiver",
          "comment",
          "state"
        ]
      },
      "SignatureType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the signature type"
          },
          "title": {
            "type": "string",
            "description": "The title of the signature type"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the signature type"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "SignatureMember": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The name/title/w.e. of the signature member"
          },
          "textAbove": {
            "type": "string",
            "description": "The text comes above the signature name"
          },
          "textBefore": {
            "type": "string",
            "description": "The text that comes before the signature name"
          },
          "textBelow": {
            "type": "string",
            "description": "The text that comes below the signature name"
          },
          "textAfter": {
            "type": "string",
            "description": "The text that comes after the signature name"
          }
        },
        "required": ["text"]
      },
      "Signature": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "The id of the signature" },
          "institution": {
            "type": "string",
            "description": "Institution of the signature"
          },
          "date": {
            "type": "string",
            "description": "ISO datestring of the signature"
          },
          "type": {
            "description": "The type of the signature",
            "allOf": [{ "$ref": "#/components/schemas/SignatureType" }]
          },
          "involvedParty": {
            "description": "The involved party of the signature",
            "allOf": [{ "$ref": "#/components/schemas/Institution" }]
          },
          "members": {
            "description": "Members of the signature",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SignatureMember" }
          },
          "chairman": {
            "description": "Chairman of the signature",
            "allOf": [{ "$ref": "#/components/schemas/SignatureMember" }]
          },
          "additionalSignature": {
            "type": "string",
            "description": "Additional signature name"
          },
          "html": { "type": "string", "description": "HTML of the signature" }
        },
        "required": [
          "id",
          "institution",
          "date",
          "type",
          "involvedParty",
          "members"
        ]
      },
      "ApplicationAttachmentType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the attachment type"
          },
          "title": {
            "type": "string",
            "enum": ["Frumrit", "Fylgiskjöl"],
            "description": "Title of the attachment type"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the attachment type"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "ApplicationAttachment": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of the attachment" },
          "applicationId": {
            "type": "string",
            "description": "Id of the application"
          },
          "originalFileName": {
            "type": "string",
            "description": "Original file name"
          },
          "fileName": { "type": "string", "description": "File name" },
          "fileFormat": { "type": "string", "description": "File format" },
          "fileExtension": {
            "type": "string",
            "description": "File extension"
          },
          "fileSize": { "type": "number", "description": "File size" },
          "fileLocation": { "type": "string", "description": "File location" },
          "type": {
            "description": "Attachment type",
            "allOf": [
              { "$ref": "#/components/schemas/ApplicationAttachmentType" }
            ]
          },
          "deleted": { "type": "boolean", "description": "Deleted" }
        },
        "required": [
          "id",
          "applicationId",
          "originalFileName",
          "fileName",
          "fileFormat",
          "fileExtension",
          "fileSize",
          "fileLocation",
          "type",
          "deleted"
        ]
      },
      "CaseAddition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "title": { "type": "string", "description": "Title of the addition" },
          "html": { "type": "string", "description": "HTML of the addition" }
        },
        "required": ["id", "title", "html"]
      },
      "Case": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "applicationId": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851",
            "description": "Id of the submitted application, default to null on older cases."
          },
          "year": {
            "type": "number",
            "example": 2024,
            "description": "Year the case was created."
          },
          "caseNumber": {
            "type": "string",
            "example": 190,
            "description": "Case number (numeric string) gets generated automatically when a case is created."
          },
          "status": {
            "description": "Status of the case, default to \"Innsent\"",
            "allOf": [{ "$ref": "#/components/schemas/CaseStatus" }]
          },
          "tag": {
            "description": "Internal tag for the case, default to null",
            "allOf": [{ "$ref": "#/components/schemas/CaseTag" }]
          },
          "involvedParty": {
            "description": "Involved party of the case.",
            "allOf": [{ "$ref": "#/components/schemas/Institution" }]
          },
          "createdAt": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Date the case was created. ISO 8601 date and time format in UTC."
          },
          "modifiedAt": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Date when the case was last updated. ISO 8601 date and time format in UTC."
          },
          "isLegacy": {
            "type": "boolean",
            "example": false,
            "description": "Is legacy case."
          },
          "assignedTo": {
            "description": "User the case is assigned to.",
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/User" }]
          },
          "communicationStatus": {
            "description": "Status of communication with the applicant, default to `CaseCommunicationStatus.NotStarted`",
            "allOf": [{ "$ref": "#/components/schemas/CommunicationStatus" }]
          },
          "fastTrack": {
            "type": "boolean",
            "example": false,
            "description": "Requested fast track"
          },
          "publishedAt": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Date the case was published. ISO 8601 date and time format in UTC."
          },
          "requestedPublicationDate": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Requested advert publication date. ISO 8601 date and time format in UTC."
          },
          "advertTitle": {
            "type": "string",
            "example": "Titill á máli",
            "description": "Advert title on case"
          },
          "advertDepartment": {
            "example": "B-Deild",
            "description": "Advert department",
            "allOf": [{ "$ref": "#/components/schemas/Department" }]
          },
          "advertType": {
            "description": "The advert type",
            "allOf": [{ "$ref": "#/components/schemas/AdvertType" }]
          },
          "advertCategories": {
            "description": "List of advert categories.",
            "nullable": false,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          },
          "price": {
            "type": "number",
            "example": 23000,
            "description": "The cost of the case."
          },
          "paid": {
            "type": "boolean",
            "example": false,
            "description": "Is the case paid for."
          },
          "message": {
            "type": "string",
            "nullable": true,
            "example": "Additional message from sender"
          },
          "html": { "type": "string", "description": "The case html content." },
          "publicationNumber": {
            "type": "string",
            "description": "Publication number of the case."
          },
          "channels": {
            "description": "Channels for the case.",
            "example": {
              "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
              "email": "dmr@dmr.is",
              "phone": "+354 123 4567"
            },
            "type": "array",
            "items": { "$ref": "#/components/schemas/CaseChannel" }
          },
          "comments": {
            "description": "Comments on the case.",
            "example": {
              "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
              "createdAt": "2024-01-01T09:00:00Z",
              "type": "Comment",
              "task": {
                "from": "Ármann",
                "to": null,
                "title": "gerir athugasemd",
                "comment": "Pálína, getur þú tekið við og staðfest að upplýsingarnar séu réttar?"
              }
            },
            "type": "array",
            "items": { "$ref": "#/components/schemas/CaseComment" }
          },
          "signatures": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Signature" }
          },
          "attachments": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ApplicationAttachment" }
          },
          "additions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CaseAddition" }
          }
        },
        "required": [
          "id",
          "applicationId",
          "year",
          "caseNumber",
          "status",
          "tag",
          "involvedParty",
          "createdAt",
          "modifiedAt",
          "isLegacy",
          "assignedTo",
          "communicationStatus",
          "fastTrack",
          "publishedAt",
          "requestedPublicationDate",
          "advertTitle",
          "advertDepartment",
          "advertType",
          "advertCategories",
          "price",
          "paid",
          "message",
          "html",
          "publicationNumber",
          "channels",
          "comments",
          "signatures",
          "attachments",
          "additions"
        ]
      },
      "CaseOverviewTotalItems": {
        "type": "object",
        "properties": {
          "submitted": {
            "type": "number",
            "description": "Total submitted cases",
            "example": 7
          },
          "inProgress": {
            "type": "number",
            "description": "Total in progress cases",
            "example": 3
          },
          "inReview": {
            "type": "number",
            "description": "Total in review cases",
            "example": 2
          },
          "ready": {
            "type": "number",
            "description": "Total ready cases",
            "example": 1
          }
        },
        "required": ["submitted", "inProgress", "inReview", "ready"]
      },
      "EditorialOverviewResponse": {
        "type": "object",
        "properties": {
          "cases": {
            "description": "Cases for selected tab",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Case" }
          },
          "totalItems": {
            "description": "Total cases for each status",
            "allOf": [{ "$ref": "#/components/schemas/CaseOverviewTotalItems" }]
          },
          "paging": {
            "description": "Paging information",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["cases", "totalItems", "paging"]
      },
      "PresignedUrlResponse": {
        "type": "object",
        "properties": { "url": { "type": "string" } },
        "required": ["url"]
      },
      "PostApplicationAttachmentBody": {
        "type": "object",
        "properties": {
          "fileName": { "type": "string" },
          "originalFileName": { "type": "string" },
          "fileFormat": { "type": "string" },
          "fileExtension": { "type": "string" },
          "fileLocation": { "type": "string" },
          "fileSize": { "type": "number" }
        },
        "required": [
          "fileName",
          "originalFileName",
          "fileFormat",
          "fileExtension",
          "fileLocation",
          "fileSize"
        ]
      },
      "UpdateCasePriceBody": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "description": "Price",
            "example": 12000
          }
        },
        "required": ["price"]
      },
      "UpdatePaidBody": {
        "type": "object",
        "properties": { "paid": { "type": "boolean" } },
        "required": ["paid"]
      },
      "UpdateTagBody": {
        "type": "object",
        "properties": { "tagId": { "type": "string" } },
        "required": ["tagId"]
      },
      "UpdateCaseDepartmentBody": {
        "type": "object",
        "properties": {
          "departmentId": { "type": "string", "description": "Department id" }
        },
        "required": ["departmentId"]
      },
      "UpdateCaseTypeBody": {
        "type": "object",
        "properties": {
          "typeId": { "type": "string", "description": "Type id" }
        },
        "required": ["typeId"]
      },
      "UpdateCommunicationStatusBody": {
        "type": "object",
        "properties": {
          "statusId": { "type": "string", "description": "Status id" }
        },
        "required": ["statusId"]
      },
      "UpdatePublishDateBody": {
        "type": "object",
        "properties": { "date": { "type": "string" } },
        "required": ["date"]
      },
      "UpdateTitleBody": {
        "type": "object",
        "properties": { "title": { "type": "string" } },
        "required": ["title"]
      },
      "UpdateCategoriesBody": {
        "type": "object",
        "properties": {
          "categoryIds": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["categoryIds"]
      },
      "UpdateNextStatusBody": {
        "type": "object",
        "properties": { "currentStatus": { "type": "string" } },
        "required": ["currentStatus"]
      },
      "UpdateCaseStatusBody": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Case status",
            "example": "ready"
          }
        },
        "required": ["status"]
      },
      "UpdateAdvertHtmlBody": {
        "type": "object",
        "properties": {
          "advertHtml": { "type": "string", "description": "Advert HTML" }
        },
        "required": ["advertHtml"]
      },
      "GetCaseResponse": {
        "type": "object",
        "properties": { "case": { "$ref": "#/components/schemas/Case" } },
        "required": ["case"]
      },
      "PostApplicationBody": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string",
            "description": "Application id",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          }
        },
        "required": ["applicationId"]
      },
      "CreateCaseResponse": {
        "type": "object",
        "properties": { "case": { "$ref": "#/components/schemas/Case" } },
        "required": ["case"]
      },
      "GetCasesReponse": {
        "type": "object",
        "properties": {
          "cases": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Case" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["cases", "paging"]
      },
      "PublishedCasesTotalItems": {
        "type": "object",
        "properties": {
          "a": { "type": "number" },
          "b": { "type": "number" },
          "c": { "type": "number" }
        },
        "required": ["a", "b", "c"]
      },
      "GetPublishedCasesResponse": {
        "type": "object",
        "properties": {
          "cases": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Case" }
          },
          "totalCases": {
            "description": "Total items",
            "allOf": [
              { "$ref": "#/components/schemas/PublishedCasesTotalItems" }
            ]
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["cases", "totalCases", "paging"]
      },
      "PostCasePublishBody": {
        "type": "object",
        "properties": {
          "caseIds": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851",
            "description": "Id of the case to publish."
          }
        },
        "required": ["caseIds"]
      },
      "GetCaseCommentsResponse": {
        "type": "object",
        "properties": {
          "comments": {
            "description": "List of case comments.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/CaseComment" }
          }
        },
        "required": ["comments"]
      },
      "GetCaseCommentResponse": {
        "type": "object",
        "properties": {
          "comment": {
            "description": "The comment that was found or null.",
            "allOf": [{ "$ref": "#/components/schemas/CaseComment" }]
          }
        },
        "required": ["comment"]
      },
      "CaseCommentSource": { "type": "string", "enum": ["API", "Application"] },
      "PostCaseCommentBody": {
        "type": "object",
        "properties": {
          "internal": {
            "type": "boolean",
            "description": "Is the comment internal"
          },
          "type": { "$ref": "#/components/schemas/CaseCommentType" },
          "source": { "$ref": "#/components/schemas/CaseCommentSource" },
          "comment": {
            "type": "string",
            "description": "The case comment itself"
          },
          "creator": { "type": "string" },
          "receiver": { "type": "string" },
          "storeState": {
            "type": "boolean",
            "description": "Store the state of the application"
          }
        },
        "required": ["internal", "type", "source", "comment", "creator"]
      },
      "GetSignaturesResponse": {
        "type": "object",
        "properties": {
          "signatures": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Signature" }
          },
          "paging": { "$ref": "#/components/schemas/Paging" }
        },
        "required": ["signatures", "paging"]
      },
      "GetSignatureResponse": {
        "type": "object",
        "properties": {
          "signature": {
            "description": "The signature",
            "allOf": [{ "$ref": "#/components/schemas/Signature" }]
          }
        },
        "required": ["signature"]
      },
      "UpdateSignatureBody": {
        "type": "object",
        "properties": {
          "institution": {
            "type": "string",
            "description": "The name of the institution responsible for the signature"
          },
          "date": {
            "type": "string",
            "description": "Date when the institution signed the signature"
          },
          "involvedPartyId": {
            "type": "string",
            "description": "The id of the involved party"
          },
          "members": {
            "description": "The members of the signature",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SignatureMember" }
          },
          "caseId": {
            "type": "string",
            "description": "The case id of the signature"
          },
          "advertId": {
            "type": "string",
            "description": "The advert id of the signature"
          },
          "chairman": {
            "description": "The chairman of the signature",
            "allOf": [{ "$ref": "#/components/schemas/SignatureMember" }]
          },
          "additionalSignature": {
            "type": "string",
            "description": "Additional signature member name"
          }
        },
        "required": [
          "institution",
          "date",
          "involvedPartyId",
          "members",
          "caseId",
          "advertId"
        ]
      },
      "GetAdvertTypes": {
        "type": "object",
        "properties": {
          "types": {
            "description": "List of advert types",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertType" }
          },
          "paging": {
            "description": "Paging information",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["types", "paging"]
      },
      "AdvertTypeError": {
        "type": "object",
        "properties": {
          "errorType": {
            "type": "string",
            "enum": ["DuplicateError", "ValidationError", "NotFoundError"]
          },
          "name": { "type": "string" },
          "message": { "type": "string" },
          "severity": { "type": "string", "enum": ["info", "warning", "error"] }
        },
        "required": ["errorType", "name", "message", "severity"]
      },
      "AdvertMainType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the main advert type"
          },
          "title": {
            "type": "string",
            "description": "The title of the main advert type"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the main advert type"
          },
          "department": {
            "description": "The department this main type belongs to",
            "allOf": [{ "$ref": "#/components/schemas/Department" }]
          },
          "types": {
            "description": "All types under this main type",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertType" }
          }
        },
        "required": ["id", "title", "slug", "department", "types"]
      },
      "GetAdvertMainTypes": {
        "type": "object",
        "properties": {
          "mainTypes": {
            "description": "List of all main advert types",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertMainType" }
          },
          "paging": {
            "description": "Paging information",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["mainTypes", "paging"]
      },
      "GetAdvertType": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The advert type",
            "allOf": [{ "$ref": "#/components/schemas/AdvertType" }]
          }
        },
        "required": ["type"]
      },
      "GetAdvertMainType": {
        "type": "object",
        "properties": {
          "mainType": {
            "description": "The main advert type",
            "allOf": [{ "$ref": "#/components/schemas/AdvertMainType" }]
          }
        },
        "required": ["mainType"]
      },
      "CreateAdvertTypeBody": {
        "type": "object",
        "properties": {
          "mainTypeId": {
            "type": "string",
            "description": "Id of the main type"
          },
          "departmentId": {
            "type": "string",
            "description": "Id of the department"
          },
          "title": {
            "type": "string",
            "description": "Name of the advert type"
          }
        },
        "required": ["departmentId", "title"]
      },
      "UpdateAdvertTypeBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "New title of the advert type"
          },
          "mainTypeId": { "type": "string" }
        },
        "required": ["mainTypeId"]
      },
      "CreateAdvertMainTypeBody": {
        "type": "object",
        "properties": {
          "departmentId": {
            "type": "string",
            "description": "The department id"
          },
          "title": {
            "type": "string",
            "description": "The title of the main advert type"
          }
        },
        "required": ["departmentId", "title"]
      },
      "CreateAdvertMainTypeBulk": {
        "type": "object",
        "properties": {
          "mainTypes": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CreateAdvertMainTypeBody" }
          }
        },
        "required": ["mainTypes"]
      },
      "UpdateAdvertMainType": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "New title of the main advert type"
          }
        }
      },
      "AdminUserRole": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "title": { "type": "string" },
          "slug": { "type": "string" }
        },
        "required": ["id", "title", "slug"]
      },
      "GetAdminUserRoles": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdminUserRole" }
          }
        },
        "required": ["roles"]
      },
      "AdminUser": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "nationalId": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "fullName": { "type": "string" },
          "email": { "type": "string" },
          "displayName": { "type": "string" },
          "roles": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdminUserRole" }
          }
        },
        "required": [
          "id",
          "nationalId",
          "firstName",
          "lastName",
          "fullName",
          "email",
          "displayName",
          "roles"
        ]
      },
      "GetAdminUsers": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdminUser" }
          }
        },
        "required": ["users"]
      },
      "CreateAdminUser": {
        "type": "object",
        "properties": {
          "nationalId": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "displayName": { "type": "string" },
          "email": { "type": "string" },
          "roleIds": { "type": "array", "items": { "type": "string" } }
        },
        "required": [
          "nationalId",
          "firstName",
          "lastName",
          "displayName",
          "email",
          "roleIds"
        ]
      },
      "GetAdminUser": {
        "type": "object",
        "properties": { "user": { "$ref": "#/components/schemas/AdminUser" } },
        "required": ["user"]
      },
      "UpdateAdminUser": {
        "type": "object",
        "properties": {
          "nationalId": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "displayName": { "type": "string" },
          "email": { "type": "string" },
          "roleIds": { "type": "array", "items": { "type": "string" } }
        }
      },
      "ApplicationUser": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "The user id" },
          "nationalId": {
            "type": "string",
            "description": "The user national id"
          },
          "firstName": {
            "type": "string",
            "description": "The user first name"
          },
          "lastName": { "type": "string", "description": "The user last name" },
          "email": { "type": "string", "description": "The user email" },
          "involvedParties": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Institution" }
          }
        },
        "required": [
          "id",
          "nationalId",
          "firstName",
          "lastName",
          "involvedParties"
        ]
      },
      "GetApplicationUsers": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ApplicationUser" }
          }
        },
        "required": ["users"]
      },
      "GetApplicationUser": {
        "type": "object",
        "properties": {
          "user": { "$ref": "#/components/schemas/ApplicationUser" }
        },
        "required": ["user"]
      },
      "CreateApplicationUser": {
        "type": "object",
        "properties": {
          "nationalId": {
            "type": "string",
            "description": "The user national id"
          },
          "firstName": {
            "type": "string",
            "description": "The user first name"
          },
          "lastName": { "type": "string", "description": "The user last name" },
          "email": { "type": "string", "description": "The user email" },
          "involvedPartyIds": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["nationalId", "firstName", "lastName", "involvedPartyIds"]
      },
      "UpdateApplicationUser": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "The user first name"
          },
          "lastName": { "type": "string", "description": "The user last name" },
          "email": { "type": "string", "description": "The user email" },
          "involvedPartyIds": { "type": "array", "items": { "type": "string" } }
        }
      },
      "GetInstitution": {
        "type": "object",
        "properties": {
          "institution": { "$ref": "#/components/schemas/Institution" }
        },
        "required": ["institution"]
      },
      "GetInstitutions": {
        "type": "object",
        "properties": {
          "institutions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Institution" }
          },
          "paging": { "$ref": "#/components/schemas/Paging" }
        },
        "required": ["institutions", "paging"]
      },
      "CreateInstitution": {
        "type": "object",
        "properties": {
          "title": { "type": "string", "description": "Title of the entity" }
        },
        "required": ["title"]
      },
      "UpdateInstitution": {
        "type": "object",
        "properties": {
          "title": { "type": "string", "description": "Title of the entity" }
        }
      },
      "StatisticsDepartmentItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Item title",
            "example": "Tilbúið"
          },
          "count": {
            "type": "number",
            "description": "Number of cases",
            "example": 10
          },
          "percentage": {
            "type": "number",
            "description": "Percentage of total",
            "example": 10
          }
        },
        "required": ["name", "count", "percentage"]
      },
      "StatisticsDepartmentData": {
        "type": "object",
        "properties": {
          "submitted": {
            "$ref": "#/components/schemas/StatisticsDepartmentItem"
          },
          "inProgress": {
            "$ref": "#/components/schemas/StatisticsDepartmentItem"
          },
          "inReview": {
            "$ref": "#/components/schemas/StatisticsDepartmentItem"
          },
          "ready": { "$ref": "#/components/schemas/StatisticsDepartmentItem" }
        },
        "required": ["submitted", "inProgress", "inReview", "ready"]
      },
      "GetStatisticsDepartmentResponse": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/StatisticsDepartmentData" },
          "totalCases": {
            "type": "number",
            "description": "Total number of cases",
            "example": 100
          }
        },
        "required": ["data", "totalCases"]
      },
      "StatisticsOverviewCategory": {
        "type": "object",
        "properties": {
          "totalCases": { "type": "number" },
          "text": { "type": "string" }
        },
        "required": ["totalCases", "text"]
      },
      "GetStatisticsOverviewResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatisticsOverviewCategory"
            }
          },
          "totalCases": { "type": "number" }
        },
        "required": ["categories", "totalCases"]
      }
    }
  }
}
